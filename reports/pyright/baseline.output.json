{
    "version": "1.1.405",
    "time": "1757285502665",
    "generalDiagnostics": [
        {
            "file": "/workspace/personal-rag-copilot/app.py",
            "severity": "error",
            "message": "Type of \"mount_gradio_app\" is partially unknown\n  Type of \"mount_gradio_app\" is \"(app: FastAPI, blocks: Blocks, path: str, server_name: str = \"0.0.0.0\", server_port: int = 7860, show_api: bool | None = None, app_kwargs: dict[str, Any] | None = None, *, auth: ((...) -> Unknown) | tuple[str, str] | list[tuple[str, str]] | None = None, auth_message: str | None = None, auth_dependency: ((Request) -> (str | None)) | None = None, root_path: str | None = None, allowed_paths: list[str] | None = None, blocked_paths: list[str] | None = None, favicon_path: str | None = None, show_error: bool = True, max_file_size: str | int | None = None, ssr_mode: bool | None = None, node_server_name: str | None = None, node_port: int | None = None, enable_monitoring: bool | None = None, pwa: bool | None = None, i18n: I18n | None = None, mcp_server: bool | None = None) -> FastAPI\"",
            "range": {
                "start": {
                    "line": 3,
                    "character": 26
                },
                "end": {
                    "line": 3,
                    "character": 42
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/__init__.py",
            "severity": "error",
            "message": "Type of \"backup_config\" is partially unknown\n  Type of \"backup_config\" is \"(path: str, backup_dir: str) -> Tuple[Path, dict[Unknown, Unknown]]\"",
            "range": {
                "start": {
                    "line": 4,
                    "character": 20
                },
                "end": {
                    "line": 4,
                    "character": 33
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/__init__.py",
            "severity": "error",
            "message": "Type of \"restore_config\" is partially unknown\n  Type of \"restore_config\" is \"(backup_path: str, target_path: str) -> Tuple[Path, dict[Unknown, Unknown]]\"",
            "range": {
                "start": {
                    "line": 4,
                    "character": 35
                },
                "end": {
                    "line": 4,
                    "character": 49
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/backup.py",
            "severity": "error",
            "message": "Return type, \"Tuple[Path, dict[Unknown, Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 10,
                    "character": 4
                },
                "end": {
                    "line": 10,
                    "character": 17
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/backup.py",
            "severity": "error",
            "message": "Expected type arguments for generic class \"dict\"",
            "range": {
                "start": {
                    "line": 10,
                    "character": 61
                },
                "end": {
                    "line": 10,
                    "character": 65
                }
            },
            "rule": "reportMissingTypeArgument"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/backup.py",
            "severity": "error",
            "message": "Return type, \"tuple[Path, dict[Unknown, Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 18,
                    "character": 11
                },
                "end": {
                    "line": 18,
                    "character": 47
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/backup.py",
            "severity": "error",
            "message": "Return type, \"Tuple[Path, dict[Unknown, Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 21,
                    "character": 4
                },
                "end": {
                    "line": 21,
                    "character": 18
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/backup.py",
            "severity": "error",
            "message": "Expected type arguments for generic class \"dict\"",
            "range": {
                "start": {
                    "line": 21,
                    "character": 70
                },
                "end": {
                    "line": 21,
                    "character": 74
                }
            },
            "rule": "reportMissingTypeArgument"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/backup.py",
            "severity": "error",
            "message": "Return type, \"tuple[Path, dict[Unknown, Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 27,
                    "character": 11
                },
                "end": {
                    "line": 27,
                    "character": 42
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/runtime_config.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"updates\" in function \"_deep_merge\"\n  Argument type is \"dict[Unknown, Unknown]\"",
            "range": {
                "start": {
                    "line": 19,
                    "character": 55
                },
                "end": {
                    "line": 19,
                    "character": 60
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/settings.py",
            "severity": "error",
            "message": "Type of \"value\" is partially unknown\n  Type of \"value\" is \"Unknown | None\"",
            "range": {
                "start": {
                    "line": 69,
                    "character": 8
                },
                "end": {
                    "line": 69,
                    "character": 13
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/settings.py",
            "severity": "error",
            "message": "Type of \"get\" is partially unknown\n  Type of \"get\" is \"Overload[(key: Unknown, default: None = None, /) -> (Unknown | None), (key: Unknown, default: Unknown, /) -> Unknown, (key: Unknown, default: _T@get, /) -> (Unknown | _T@get)]\"",
            "range": {
                "start": {
                    "line": 69,
                    "character": 16
                },
                "end": {
                    "line": 69,
                    "character": 30
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/settings.py",
            "severity": "error",
            "message": "Type of \"value\" is partially unknown\n  Type of \"value\" is \"Unknown | None\"",
            "range": {
                "start": {
                    "line": 96,
                    "character": 8
                },
                "end": {
                    "line": 96,
                    "character": 13
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/settings.py",
            "severity": "error",
            "message": "Type of \"get\" is partially unknown\n  Type of \"get\" is \"Overload[(key: Unknown, default: None = None, /) -> (Unknown | None), (key: Unknown, default: Unknown, /) -> Unknown, (key: Unknown, default: _T@get, /) -> (Unknown | _T@get)]\"",
            "range": {
                "start": {
                    "line": 96,
                    "character": 16
                },
                "end": {
                    "line": 96,
                    "character": 26
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/settings.py",
            "severity": "error",
            "message": "Type of \"auto\" is partially unknown\n  Type of \"auto\" is \"Unknown | None\"",
            "range": {
                "start": {
                    "line": 103,
                    "character": 4
                },
                "end": {
                    "line": 103,
                    "character": 8
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/settings.py",
            "severity": "error",
            "message": "Type of \"get\" is partially unknown\n  Type of \"get\" is \"Overload[(key: Unknown, default: None = None, /) -> (Unknown | None), (key: Unknown, default: Unknown, /) -> Unknown, (key: Unknown, default: _T@get, /) -> (Unknown | _T@get)]\"",
            "range": {
                "start": {
                    "line": 103,
                    "character": 11
                },
                "end": {
                    "line": 103,
                    "character": 21
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/settings.py",
            "severity": "error",
            "message": "Type of \"data\" is partially unknown\n  Type of \"data\" is \"Any | dict[Unknown, Unknown]\"",
            "range": {
                "start": {
                    "line": 122,
                    "character": 12
                },
                "end": {
                    "line": 122,
                    "character": 16
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/settings.py",
            "severity": "error",
            "message": "Return type, \"tuple[Any | dict[Unknown, Unknown], dict[str, Any]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 123,
                    "character": 15
                },
                "end": {
                    "line": 123,
                    "character": 47
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/settings.py",
            "severity": "error",
            "message": "Type of \"update\" is partially unknown\n  Type of \"update\" is \"Overload[(m: SupportsKeysAndGetItem[Unknown, Unknown], /) -> None, (m: SupportsKeysAndGetItem[str, Unknown], /, **kwargs: Unknown) -> None, (m: Iterable[tuple[Unknown, Unknown]], /) -> None, (m: Iterable[tuple[str, Unknown]], /, **kwargs: Unknown) -> None, (**kwargs: Unknown) -> None]\"",
            "range": {
                "start": {
                    "line": 136,
                    "character": 4
                },
                "end": {
                    "line": 136,
                    "character": 17
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/settings.py",
            "severity": "error",
            "message": "Type of \"update\" is partially unknown\n  Type of \"update\" is \"Overload[(m: SupportsKeysAndGetItem[Unknown, Unknown], /) -> None, (m: SupportsKeysAndGetItem[str, Unknown], /, **kwargs: Unknown) -> None, (m: Iterable[tuple[Unknown, Unknown]], /) -> None, (m: Iterable[tuple[str, Unknown]], /, **kwargs: Unknown) -> None, (**kwargs: Unknown) -> None]\"",
            "range": {
                "start": {
                    "line": 137,
                    "character": 4
                },
                "end": {
                    "line": 137,
                    "character": 17
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/settings.py",
            "severity": "error",
            "message": "Type of \"update\" is partially unknown\n  Type of \"update\" is \"Overload[(m: SupportsKeysAndGetItem[Unknown, Unknown], /) -> None, (m: SupportsKeysAndGetItem[str, Unknown], /, **kwargs: Unknown) -> None, (m: Iterable[tuple[Unknown, Unknown]], /) -> None, (m: Iterable[tuple[str, Unknown]], /, **kwargs: Unknown) -> None, (**kwargs: Unknown) -> None]\"",
            "range": {
                "start": {
                    "line": 138,
                    "character": 4
                },
                "end": {
                    "line": 138,
                    "character": 17
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/validate.py",
            "severity": "error",
            "message": "Type of \"current\" is partially unknown\n  Type of \"current\" is \"Unknown | None\"",
            "range": {
                "start": {
                    "line": 33,
                    "character": 8
                },
                "end": {
                    "line": 33,
                    "character": 15
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/validate.py",
            "severity": "error",
            "message": "Type of \"get\" is partially unknown\n  Type of \"get\" is \"Overload[(key: Unknown, default: None = None, /) -> (Unknown | None), (key: Unknown, default: Unknown, /) -> Unknown, (key: Unknown, default: _T@get, /) -> (Unknown | _T@get)]\"",
            "range": {
                "start": {
                    "line": 33,
                    "character": 18
                },
                "end": {
                    "line": 33,
                    "character": 29
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/config/validate.py",
            "severity": "error",
            "message": "Return type, \"Any | Unknown\", is partially unknown",
            "range": {
                "start": {
                    "line": 34,
                    "character": 11
                },
                "end": {
                    "line": 34,
                    "character": 18
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/evaluation/ragas_integration.py",
            "severity": "error",
            "message": "Type of \"evaluate\" is partially unknown\n  Type of \"evaluate\" is \"(dataset: Dataset | EvaluationDataset, metrics: Sequence[Metric] | None = None, llm: BaseRagasLLM | BaseLanguageModel[Unknown] | None = None, embeddings: BaseRagasEmbeddings | BaseRagasEmbedding | Embeddings | None = None, experiment_name: str | None = None, callbacks: list[BaseCallbackHandler] | BaseCallbackManager | None = None, run_config: RunConfig | None = None, token_usage_parser: ((LLMResult | ChatResult) -> TokenUsage) | None = None, raise_exceptions: bool = False, column_map: Dict[str, str] | None = None, show_progress: bool = True, batch_size: int | None = None, _run_id: UUID | None = None, _pbar: tqdm_asyncio[Unknown] | None = None, return_executor: bool = False) -> (EvaluationResult | Executor)\"",
            "range": {
                "start": {
                    "line": 10,
                    "character": 18
                },
                "end": {
                    "line": 10,
                    "character": 26
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/evaluation/ragas_integration.py",
            "severity": "error",
            "message": "Argument of type \"dict[str, list[str] | list[List[str]]]\" cannot be assigned to parameter \"dataset\" of type \"Dataset | EvaluationDataset\"\n  Type \"dict[str, list[str] | list[List[str]]]\" is not assignable to type \"Dataset | EvaluationDataset\"\n    \"dict[str, list[str] | list[List[str]]]\" is not assignable to \"Dataset\"\n    \"dict[str, list[str] | list[List[str]]]\" is not assignable to \"EvaluationDataset\"",
            "range": {
                "start": {
                    "line": 53,
                    "character": 16
                },
                "end": {
                    "line": 53,
                    "character": 20
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/huggingface_models.py",
            "severity": "error",
            "message": "Object of type \"None\" cannot be called",
            "range": {
                "start": {
                    "line": 54,
                    "character": 19
                },
                "end": {
                    "line": 58,
                    "character": 13
                }
            },
            "rule": "reportOptionalCall"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/huggingface_models.py",
            "severity": "error",
            "message": "Object of type \"None\" cannot be called",
            "range": {
                "start": {
                    "line": 71,
                    "character": 27
                },
                "end": {
                    "line": 76,
                    "character": 21
                }
            },
            "rule": "reportOptionalCall"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/huggingface_models.py",
            "severity": "error",
            "message": "Object of type \"None\" cannot be called",
            "range": {
                "start": {
                    "line": 92,
                    "character": 27
                },
                "end": {
                    "line": 96,
                    "character": 21
                }
            },
            "rule": "reportOptionalCall"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Return type, \"Unknown | None\", is partially unknown",
            "range": {
                "start": {
                    "line": 46,
                    "character": 8
                },
                "end": {
                    "line": 46,
                    "character": 21
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"func\" is partially unknown\n  Parameter type is \"(...) -> Unknown\"",
            "range": {
                "start": {
                    "line": 46,
                    "character": 28
                },
                "end": {
                    "line": 46,
                    "character": 32
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Expected type arguments for generic class \"Callable\"",
            "range": {
                "start": {
                    "line": 46,
                    "character": 34
                },
                "end": {
                    "line": 46,
                    "character": 42
                }
            },
            "rule": "reportMissingTypeArgument"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"args\" is unknown",
            "range": {
                "start": {
                    "line": 46,
                    "character": 45
                },
                "end": {
                    "line": 46,
                    "character": 49
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"args\"",
            "range": {
                "start": {
                    "line": 46,
                    "character": 45
                },
                "end": {
                    "line": 46,
                    "character": 49
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"kwargs\" is unknown",
            "range": {
                "start": {
                    "line": 46,
                    "character": 53
                },
                "end": {
                    "line": 46,
                    "character": 59
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"kwargs\"",
            "range": {
                "start": {
                    "line": 46,
                    "character": 53
                },
                "end": {
                    "line": 46,
                    "character": 59
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Return type is unknown",
            "range": {
                "start": {
                    "line": 52,
                    "character": 23
                },
                "end": {
                    "line": 52,
                    "character": 44
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"args\"",
            "range": {
                "start": {
                    "line": 52,
                    "character": 29
                },
                "end": {
                    "line": 52,
                    "character": 33
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"kwargs\"",
            "range": {
                "start": {
                    "line": 52,
                    "character": 37
                },
                "end": {
                    "line": 52,
                    "character": 43
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of \"init\" is unknown",
            "range": {
                "start": {
                    "line": 71,
                    "character": 8
                },
                "end": {
                    "line": 71,
                    "character": 21
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "\"init\" is not a known attribute of module \"pinecone\"",
            "range": {
                "start": {
                    "line": 71,
                    "character": 17
                },
                "end": {
                    "line": 71,
                    "character": 21
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "\"init\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 71,
                    "character": 17
                },
                "end": {
                    "line": 71,
                    "character": 21
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of \"list_indexes\" is unknown",
            "range": {
                "start": {
                    "line": 82,
                    "character": 25
                },
                "end": {
                    "line": 82,
                    "character": 46
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "\"list_indexes\" is not a known attribute of module \"pinecone\"",
            "range": {
                "start": {
                    "line": 82,
                    "character": 34
                },
                "end": {
                    "line": 82,
                    "character": 46
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "\"list_indexes\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 82,
                    "character": 34
                },
                "end": {
                    "line": 82,
                    "character": 46
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of \"_with_retries\" is partially unknown\n  Type of \"_with_retries\" is \"(func: (...) -> Unknown, ...) -> (Unknown | None)\"",
            "range": {
                "start": {
                    "line": 84,
                    "character": 8
                },
                "end": {
                    "line": 84,
                    "character": 26
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of \"create_index\" is unknown",
            "range": {
                "start": {
                    "line": 85,
                    "character": 12
                },
                "end": {
                    "line": 85,
                    "character": 33
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"func\" in function \"_with_retries\"",
            "range": {
                "start": {
                    "line": 85,
                    "character": 12
                },
                "end": {
                    "line": 85,
                    "character": 33
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "\"create_index\" is not a known attribute of module \"pinecone\"",
            "range": {
                "start": {
                    "line": 85,
                    "character": 21
                },
                "end": {
                    "line": 85,
                    "character": 33
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "\"create_index\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 85,
                    "character": 21
                },
                "end": {
                    "line": 85,
                    "character": 33
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of \"list_indexes\" is unknown",
            "range": {
                "start": {
                    "line": 95,
                    "character": 29
                },
                "end": {
                    "line": 95,
                    "character": 50
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "\"list_indexes\" is not a known attribute of module \"pinecone\"",
            "range": {
                "start": {
                    "line": 95,
                    "character": 38
                },
                "end": {
                    "line": 95,
                    "character": 50
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "\"list_indexes\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 95,
                    "character": 38
                },
                "end": {
                    "line": 95,
                    "character": 50
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of \"_with_retries\" is partially unknown\n  Type of \"_with_retries\" is \"(func: (...) -> Unknown, ...) -> (Unknown | None)\"",
            "range": {
                "start": {
                    "line": 97,
                    "character": 8
                },
                "end": {
                    "line": 97,
                    "character": 26
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of \"delete_index\" is unknown",
            "range": {
                "start": {
                    "line": 97,
                    "character": 27
                },
                "end": {
                    "line": 97,
                    "character": 48
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"func\" in function \"_with_retries\"",
            "range": {
                "start": {
                    "line": 97,
                    "character": 27
                },
                "end": {
                    "line": 97,
                    "character": 48
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "\"delete_index\" is not a known attribute of module \"pinecone\"",
            "range": {
                "start": {
                    "line": 97,
                    "character": 36
                },
                "end": {
                    "line": 97,
                    "character": 48
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "\"delete_index\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 97,
                    "character": 36
                },
                "end": {
                    "line": 97,
                    "character": 48
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Return type is unknown",
            "range": {
                "start": {
                    "line": 99,
                    "character": 8
                },
                "end": {
                    "line": 99,
                    "character": 17
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of \"Index\" is unknown",
            "range": {
                "start": {
                    "line": 100,
                    "character": 15
                },
                "end": {
                    "line": 100,
                    "character": 29
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Return type is unknown",
            "range": {
                "start": {
                    "line": 100,
                    "character": 15
                },
                "end": {
                    "line": 100,
                    "character": 41
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "\"Index\" is not a known attribute of module \"pinecone\"",
            "range": {
                "start": {
                    "line": 100,
                    "character": 24
                },
                "end": {
                    "line": 100,
                    "character": 29
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "\"Index\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 100,
                    "character": 24
                },
                "end": {
                    "line": 100,
                    "character": 29
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of \"description\" is unknown",
            "range": {
                "start": {
                    "line": 104,
                    "character": 12
                },
                "end": {
                    "line": 104,
                    "character": 23
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of \"describe_index\" is unknown",
            "range": {
                "start": {
                    "line": 104,
                    "character": 26
                },
                "end": {
                    "line": 104,
                    "character": 49
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "\"describe_index\" is not a known attribute of module \"pinecone\"",
            "range": {
                "start": {
                    "line": 104,
                    "character": 35
                },
                "end": {
                    "line": 104,
                    "character": 49
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "\"describe_index\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 104,
                    "character": 35
                },
                "end": {
                    "line": 104,
                    "character": 49
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of \"actual_dim\" is unknown",
            "range": {
                "start": {
                    "line": 105,
                    "character": 12
                },
                "end": {
                    "line": 105,
                    "character": 22
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of \"dimension\" is unknown",
            "range": {
                "start": {
                    "line": 105,
                    "character": 25
                },
                "end": {
                    "line": 105,
                    "character": 46
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"args\" in function \"error\"",
            "range": {
                "start": {
                    "line": 110,
                    "character": 20
                },
                "end": {
                    "line": 110,
                    "character": 30
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of \"index\" is unknown",
            "range": {
                "start": {
                    "line": 130,
                    "character": 8
                },
                "end": {
                    "line": 130,
                    "character": 13
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of \"_with_retries\" is partially unknown\n  Type of \"_with_retries\" is \"(func: (...) -> Unknown, ...) -> (Unknown | None)\"",
            "range": {
                "start": {
                    "line": 137,
                    "character": 12
                },
                "end": {
                    "line": 137,
                    "character": 30
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of \"upsert\" is unknown",
            "range": {
                "start": {
                    "line": 138,
                    "character": 16
                },
                "end": {
                    "line": 138,
                    "character": 28
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"func\" in function \"_with_retries\"",
            "range": {
                "start": {
                    "line": 138,
                    "character": 16
                },
                "end": {
                    "line": 138,
                    "character": 28
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of \"index\" is unknown",
            "range": {
                "start": {
                    "line": 153,
                    "character": 8
                },
                "end": {
                    "line": 153,
                    "character": 13
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of \"_with_retries\" is partially unknown\n  Type of \"_with_retries\" is \"(func: (...) -> Unknown, ...) -> (Unknown | None)\"",
            "range": {
                "start": {
                    "line": 154,
                    "character": 15
                },
                "end": {
                    "line": 154,
                    "character": 33
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Return type, \"Unknown | None\", is partially unknown",
            "range": {
                "start": {
                    "line": 154,
                    "character": 15
                },
                "end": {
                    "line": 159,
                    "character": 9
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Type of \"query\" is unknown",
            "range": {
                "start": {
                    "line": 155,
                    "character": 12
                },
                "end": {
                    "line": 155,
                    "character": 23
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/integrations/pinecone_client.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"func\" in function \"_with_retries\"",
            "range": {
                "start": {
                    "line": 155,
                    "character": 12
                },
                "end": {
                    "line": 155,
                    "character": 23
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/monitoring/auto_tuner.py",
            "severity": "error",
            "message": "Type of \"locks\" is partially unknown\n  Type of \"locks\" is \"set[Unknown]\"",
            "range": {
                "start": {
                    "line": 36,
                    "character": 8
                },
                "end": {
                    "line": 36,
                    "character": 13
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/monitoring/performance.py",
            "severity": "error",
            "message": "Type of parameter \"exc_type\" is unknown",
            "range": {
                "start": {
                    "line": 30,
                    "character": 23
                },
                "end": {
                    "line": 30,
                    "character": 31
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/monitoring/performance.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"exc_type\"",
            "range": {
                "start": {
                    "line": 30,
                    "character": 23
                },
                "end": {
                    "line": 30,
                    "character": 31
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/monitoring/performance.py",
            "severity": "error",
            "message": "Type of parameter \"exc\" is unknown",
            "range": {
                "start": {
                    "line": 30,
                    "character": 33
                },
                "end": {
                    "line": 30,
                    "character": 36
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/monitoring/performance.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"exc\"",
            "range": {
                "start": {
                    "line": 30,
                    "character": 33
                },
                "end": {
                    "line": 30,
                    "character": 36
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/monitoring/performance.py",
            "severity": "error",
            "message": "Type of parameter \"tb\" is unknown",
            "range": {
                "start": {
                    "line": 30,
                    "character": 38
                },
                "end": {
                    "line": 30,
                    "character": 40
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/monitoring/performance.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"tb\"",
            "range": {
                "start": {
                    "line": 30,
                    "character": 38
                },
                "end": {
                    "line": 30,
                    "character": 40
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/monitoring/performance.py",
            "severity": "error",
            "message": "Type of parameter \"exc_type\" is unknown",
            "range": {
                "start": {
                    "line": 74,
                    "character": 23
                },
                "end": {
                    "line": 74,
                    "character": 31
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/monitoring/performance.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"exc_type\"",
            "range": {
                "start": {
                    "line": 74,
                    "character": 23
                },
                "end": {
                    "line": 74,
                    "character": 31
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/monitoring/performance.py",
            "severity": "error",
            "message": "Type of parameter \"exc\" is unknown",
            "range": {
                "start": {
                    "line": 74,
                    "character": 33
                },
                "end": {
                    "line": 74,
                    "character": 36
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/monitoring/performance.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"exc\"",
            "range": {
                "start": {
                    "line": 74,
                    "character": 33
                },
                "end": {
                    "line": 74,
                    "character": 36
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/monitoring/performance.py",
            "severity": "error",
            "message": "Type of parameter \"tb\" is unknown",
            "range": {
                "start": {
                    "line": 74,
                    "character": 38
                },
                "end": {
                    "line": 74,
                    "character": 40
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/monitoring/performance.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"tb\"",
            "range": {
                "start": {
                    "line": 74,
                    "character": 38
                },
                "end": {
                    "line": 74,
                    "character": 40
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/monitoring/performance.py",
            "severity": "error",
            "message": "Type of \"__exit__\" is partially unknown\n  Type of \"__exit__\" is \"(exc_type: Unknown, exc: Unknown, tb: Unknown) -> None\"",
            "range": {
                "start": {
                    "line": 78,
                    "character": 12
                },
                "end": {
                    "line": 78,
                    "character": 30
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/monitoring/performance.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"exc_type\" in function \"__exit__\"",
            "range": {
                "start": {
                    "line": 78,
                    "character": 31
                },
                "end": {
                    "line": 78,
                    "character": 39
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/monitoring/performance.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"exc\" in function \"__exit__\"",
            "range": {
                "start": {
                    "line": 78,
                    "character": 41
                },
                "end": {
                    "line": 78,
                    "character": 44
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/monitoring/performance.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"tb\" in function \"__exit__\"",
            "range": {
                "start": {
                    "line": 78,
                    "character": 46
                },
                "end": {
                    "line": 78,
                    "character": 48
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/query_service.py",
            "severity": "error",
            "message": "Argument of type \"Any | int\" cannot be assigned to parameter \"enable_rerank\" of type \"bool\" in function \"query\"\n  Type \"Any | int\" is not assignable to type \"bool\"\n    \"int\" is not assignable to \"bool\"",
            "range": {
                "start": {
                    "line": 46,
                    "character": 30
                },
                "end": {
                    "line": 46,
                    "character": 53
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Import \"openvino.runtime\" could not be resolved",
            "range": {
                "start": {
                    "line": 35,
                    "character": 21
                },
                "end": {
                    "line": 35,
                    "character": 37
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"Core\" is unknown",
            "range": {
                "start": {
                    "line": 35,
                    "character": 45
                },
                "end": {
                    "line": 35,
                    "character": 49
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"core\" is unknown",
            "range": {
                "start": {
                    "line": 37,
                    "character": 16
                },
                "end": {
                    "line": 37,
                    "character": 25
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"tokenizer\" is unknown",
            "range": {
                "start": {
                    "line": 42,
                    "character": 12
                },
                "end": {
                    "line": 42,
                    "character": 26
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"from_pretrained\" is partially unknown\n  Type of \"from_pretrained\" is \"(pretrained_model_name_or_path: Unknown, ...) -> Unknown\"",
            "range": {
                "start": {
                    "line": 42,
                    "character": 29
                },
                "end": {
                    "line": 42,
                    "character": 58
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"model\" is unknown",
            "range": {
                "start": {
                    "line": 48,
                    "character": 16
                },
                "end": {
                    "line": 48,
                    "character": 26
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"core\" is unknown",
            "range": {
                "start": {
                    "line": 48,
                    "character": 29
                },
                "end": {
                    "line": 48,
                    "character": 38
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"compile_model\" is unknown",
            "range": {
                "start": {
                    "line": 48,
                    "character": 29
                },
                "end": {
                    "line": 48,
                    "character": 52
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"model\" is partially unknown\n  Type of \"model\" is \"Unknown | Any\"",
            "range": {
                "start": {
                    "line": 55,
                    "character": 16
                },
                "end": {
                    "line": 55,
                    "character": 26
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"from_pretrained\" is partially unknown\n  Type of \"from_pretrained\" is \"(pretrained_model_name_or_path: str | PathLike[str], ...) -> (Unknown | Any)\"",
            "range": {
                "start": {
                    "line": 56,
                    "character": 20
                },
                "end": {
                    "line": 56,
                    "character": 70
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"model\" is partially unknown\n  Type of \"model\" is \"Unknown | Any\"",
            "range": {
                "start": {
                    "line": 61,
                    "character": 16
                },
                "end": {
                    "line": 61,
                    "character": 26
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"to\" is partially unknown\n  Type of \"to\" is \"Unknown | Any\"",
            "range": {
                "start": {
                    "line": 61,
                    "character": 16
                },
                "end": {
                    "line": 61,
                    "character": 29
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"model\" is partially unknown\n  Type of \"model\" is \"Unknown | Any\"",
            "range": {
                "start": {
                    "line": 69,
                    "character": 20
                },
                "end": {
                    "line": 69,
                    "character": 30
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"to\" is partially unknown\n  Type of \"to\" is \"Unknown | Any\"",
            "range": {
                "start": {
                    "line": 69,
                    "character": 20
                },
                "end": {
                    "line": 69,
                    "character": 33
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"inputs\" is unknown",
            "range": {
                "start": {
                    "line": 77,
                    "character": 12
                },
                "end": {
                    "line": 77,
                    "character": 18
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"tokenizer\" is partially unknown\n  Type of \"tokenizer\" is \"Unknown | None\"",
            "range": {
                "start": {
                    "line": 77,
                    "character": 21
                },
                "end": {
                    "line": 77,
                    "character": 35
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Object of type \"None\" cannot be called",
            "range": {
                "start": {
                    "line": 77,
                    "character": 21
                },
                "end": {
                    "line": 83,
                    "character": 13
                }
            },
            "rule": "reportOptionalCall"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"result\" is partially unknown\n  Type of \"result\" is \"Any | Unknown\"",
            "range": {
                "start": {
                    "line": 84,
                    "character": 12
                },
                "end": {
                    "line": 84,
                    "character": 18
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"model\" is partially unknown\n  Type of \"model\" is \"Unknown | Any | None\"",
            "range": {
                "start": {
                    "line": 84,
                    "character": 21
                },
                "end": {
                    "line": 84,
                    "character": 31
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Object of type \"None\" cannot be called",
            "range": {
                "start": {
                    "line": 84,
                    "character": 21
                },
                "end": {
                    "line": 84,
                    "character": 39
                }
            },
            "rule": "reportOptionalCall"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"logits\" is partially unknown\n  Type of \"logits\" is \"Any | Unknown\"",
            "range": {
                "start": {
                    "line": 85,
                    "character": 12
                },
                "end": {
                    "line": 85,
                    "character": 18
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"squeeze\" is partially unknown\n  Type of \"squeeze\" is \"Any | Unknown\"",
            "range": {
                "start": {
                    "line": 85,
                    "character": 21
                },
                "end": {
                    "line": 85,
                    "character": 56
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"i\" in function \"next\"\n  Argument type is \"SupportsNext[Any | Unknown]\"",
            "range": {
                "start": {
                    "line": 85,
                    "character": 26
                },
                "end": {
                    "line": 85,
                    "character": 47
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"values\" is partially unknown\n  Type of \"values\" is \"Any | Unknown\"",
            "range": {
                "start": {
                    "line": 85,
                    "character": 31
                },
                "end": {
                    "line": 85,
                    "character": 44
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"object\" in function \"iter\"\n  Argument type is \"Any | Unknown\"",
            "range": {
                "start": {
                    "line": 85,
                    "character": 31
                },
                "end": {
                    "line": 85,
                    "character": 46
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"tolist\" is partially unknown\n  Type of \"tolist\" is \"Any | Unknown\"",
            "range": {
                "start": {
                    "line": 86,
                    "character": 19
                },
                "end": {
                    "line": 86,
                    "character": 32
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Return type, \"Any | Unknown\", is partially unknown",
            "range": {
                "start": {
                    "line": 86,
                    "character": 19
                },
                "end": {
                    "line": 86,
                    "character": 34
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"inputs\" is unknown",
            "range": {
                "start": {
                    "line": 87,
                    "character": 8
                },
                "end": {
                    "line": 87,
                    "character": 14
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"tokenizer\" is partially unknown\n  Type of \"tokenizer\" is \"Unknown | None\"",
            "range": {
                "start": {
                    "line": 87,
                    "character": 17
                },
                "end": {
                    "line": 87,
                    "character": 31
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Object of type \"None\" cannot be called",
            "range": {
                "start": {
                    "line": 87,
                    "character": 17
                },
                "end": {
                    "line": 93,
                    "character": 9
                }
            },
            "rule": "reportOptionalCall"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"inputs\" is partially unknown\n  Type of \"inputs\" is \"dict[Unknown, Unknown]\"",
            "range": {
                "start": {
                    "line": 95,
                    "character": 12
                },
                "end": {
                    "line": 95,
                    "character": 18
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"to\" is unknown",
            "range": {
                "start": {
                    "line": 95,
                    "character": 25
                },
                "end": {
                    "line": 95,
                    "character": 29
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"k\" is unknown",
            "range": {
                "start": {
                    "line": 95,
                    "character": 41
                },
                "end": {
                    "line": 95,
                    "character": 42
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"v\" is unknown",
            "range": {
                "start": {
                    "line": 95,
                    "character": 44
                },
                "end": {
                    "line": 95,
                    "character": 45
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"items\" is unknown",
            "range": {
                "start": {
                    "line": 95,
                    "character": 49
                },
                "end": {
                    "line": 95,
                    "character": 61
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"logits\" is partially unknown\n  Type of \"logits\" is \"Any | Unknown\"",
            "range": {
                "start": {
                    "line": 97,
                    "character": 12
                },
                "end": {
                    "line": 97,
                    "character": 18
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"model\" is partially unknown\n  Type of \"model\" is \"Unknown | Any | None\"",
            "range": {
                "start": {
                    "line": 97,
                    "character": 21
                },
                "end": {
                    "line": 97,
                    "character": 31
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Object of type \"None\" cannot be called",
            "range": {
                "start": {
                    "line": 97,
                    "character": 21
                },
                "end": {
                    "line": 97,
                    "character": 41
                }
            },
            "rule": "reportOptionalCall"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"logits\" is partially unknown\n  Type of \"logits\" is \"Any | Unknown\"",
            "range": {
                "start": {
                    "line": 97,
                    "character": 21
                },
                "end": {
                    "line": 97,
                    "character": 48
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"squeeze\" is partially unknown\n  Type of \"squeeze\" is \"Any | Unknown\"",
            "range": {
                "start": {
                    "line": 97,
                    "character": 21
                },
                "end": {
                    "line": 97,
                    "character": 56
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"cpu\" is partially unknown\n  Type of \"cpu\" is \"Any | Unknown\"",
            "range": {
                "start": {
                    "line": 98,
                    "character": 15
                },
                "end": {
                    "line": 98,
                    "character": 25
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Type of \"tolist\" is partially unknown\n  Type of \"tolist\" is \"Any | Unknown\"",
            "range": {
                "start": {
                    "line": 98,
                    "character": 15
                },
                "end": {
                    "line": 98,
                    "character": 34
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ranking/reranker.py",
            "severity": "error",
            "message": "Return type, \"Any | Unknown\", is partially unknown",
            "range": {
                "start": {
                    "line": 98,
                    "character": 15
                },
                "end": {
                    "line": 98,
                    "character": 36
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/dense.py",
            "severity": "error",
            "message": "Type of \"core\" is unknown",
            "range": {
                "start": {
                    "line": 57,
                    "character": 28
                },
                "end": {
                    "line": 57,
                    "character": 32
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/dense.py",
            "severity": "error",
            "message": "Type of \"compile_model\" is unknown",
            "range": {
                "start": {
                    "line": 58,
                    "character": 45
                },
                "end": {
                    "line": 58,
                    "character": 63
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/dense.py",
            "severity": "error",
            "message": "Type of \"encode\" is partially unknown\n  Type of \"encode\" is \"Overload[(sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding', 'token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: Literal[False] = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor, (sentences: str | list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: Literal[True] = ..., convert_to_tensor: Literal[False] = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> ndarray[tuple[Any, ...], dtype[Any]], (sentences: str | list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: Literal[True] = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor, (sentences: list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding', 'token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> list[Tensor], (sentences: list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: None = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> list[dict[str, Tensor]], (sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: None = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> dict[str, Tensor], (sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor]\"",
            "range": {
                "start": {
                    "line": 77,
                    "character": 20
                },
                "end": {
                    "line": 77,
                    "character": 38
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/dense.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"func\" in function \"to_thread\"\n  Argument type is \"Overload[(sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding', 'token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: Literal[False] = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor, (sentences: str | list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: Literal[True] = ..., convert_to_tensor: Literal[False] = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> ndarray[tuple[Any, ...], dtype[Any]], (sentences: str | list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: Literal[True] = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor, (sentences: list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding', 'token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> list[Tensor], (sentences: list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: None = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> list[dict[str, Tensor]], (sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: None = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> dict[str, Tensor], (sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor]\"",
            "range": {
                "start": {
                    "line": 77,
                    "character": 20
                },
                "end": {
                    "line": 77,
                    "character": 38
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/dense.py",
            "severity": "error",
            "message": "Type of \"encode\" is partially unknown\n  Type of \"encode\" is \"Overload[(sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding', 'token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: Literal[False] = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor, (sentences: str | list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: Literal[True] = ..., convert_to_tensor: Literal[False] = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> ndarray[tuple[Any, ...], dtype[Any]], (sentences: str | list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: Literal[True] = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor, (sentences: list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding', 'token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> list[Tensor], (sentences: list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: None = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> list[dict[str, Tensor]], (sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: None = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> dict[str, Tensor], (sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor]\"",
            "range": {
                "start": {
                    "line": 84,
                    "character": 16
                },
                "end": {
                    "line": 84,
                    "character": 34
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/dense.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"func\" in function \"to_thread\"\n  Argument type is \"Overload[(sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding', 'token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: Literal[False] = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor, (sentences: str | list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: Literal[True] = ..., convert_to_tensor: Literal[False] = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> ndarray[tuple[Any, ...], dtype[Any]], (sentences: str | list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: Literal[True] = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor, (sentences: list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding', 'token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> list[Tensor], (sentences: list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: None = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> list[dict[str, Tensor]], (sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: None = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> dict[str, Tensor], (sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor]\"",
            "range": {
                "start": {
                    "line": 84,
                    "character": 16
                },
                "end": {
                    "line": 84,
                    "character": 34
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/dense.py",
            "severity": "error",
            "message": "Type of \"tolist\" is partially unknown\n  Type of \"tolist\" is \"Unknown | Overload[() -> Any, () -> Any, () -> list[Any], () -> list[list[Any]], () -> list[list[list[Any]]], () -> Any]\"",
            "range": {
                "start": {
                    "line": 89,
                    "character": 15
                },
                "end": {
                    "line": 89,
                    "character": 32
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/dense.py",
            "severity": "error",
            "message": "Return type, \"Any | Unknown\", is partially unknown",
            "range": {
                "start": {
                    "line": 89,
                    "character": 15
                },
                "end": {
                    "line": 89,
                    "character": 34
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/dense.py",
            "severity": "error",
            "message": "Cannot access attribute \"tolist\" for class \"object\"\n  Attribute \"tolist\" is unknown",
            "range": {
                "start": {
                    "line": 89,
                    "character": 26
                },
                "end": {
                    "line": 89,
                    "character": 32
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/dense.py",
            "severity": "error",
            "message": "Type of \"encode\" is partially unknown\n  Type of \"encode\" is \"Overload[(sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding', 'token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: Literal[False] = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor, (sentences: str | list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: Literal[True] = ..., convert_to_tensor: Literal[False] = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> ndarray[tuple[Any, ...], dtype[Any]], (sentences: str | list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: Literal[True] = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor, (sentences: list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding', 'token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> list[Tensor], (sentences: list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: None = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> list[dict[str, Tensor]], (sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: None = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> dict[str, Tensor], (sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor]\"",
            "range": {
                "start": {
                    "line": 132,
                    "character": 56
                },
                "end": {
                    "line": 132,
                    "character": 74
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/dense.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"func\" in function \"to_thread\"\n  Argument type is \"Overload[(sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding', 'token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: Literal[False] = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor, (sentences: str | list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: Literal[True] = ..., convert_to_tensor: Literal[False] = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> ndarray[tuple[Any, ...], dtype[Any]], (sentences: str | list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: Literal[True] = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor, (sentences: list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding', 'token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> list[Tensor], (sentences: list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: None = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> list[dict[str, Tensor]], (sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: None = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> dict[str, Tensor], (sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor]\"",
            "range": {
                "start": {
                    "line": 132,
                    "character": 56
                },
                "end": {
                    "line": 132,
                    "character": 74
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/dense.py",
            "severity": "error",
            "message": "Type of \"encode\" is partially unknown\n  Type of \"encode\" is \"Overload[(sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding', 'token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: Literal[False] = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor, (sentences: str | list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: Literal[True] = ..., convert_to_tensor: Literal[False] = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> ndarray[tuple[Any, ...], dtype[Any]], (sentences: str | list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: Literal[True] = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor, (sentences: list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding', 'token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> list[Tensor], (sentences: list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: None = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> list[dict[str, Tensor]], (sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: None = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> dict[str, Tensor], (sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor]\"",
            "range": {
                "start": {
                    "line": 134,
                    "character": 52
                },
                "end": {
                    "line": 134,
                    "character": 70
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/dense.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"func\" in function \"to_thread\"\n  Argument type is \"Overload[(sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding', 'token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: Literal[False] = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor, (sentences: str | list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: Literal[True] = ..., convert_to_tensor: Literal[False] = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> ndarray[tuple[Any, ...], dtype[Any]], (sentences: str | list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: Literal[True] = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor, (sentences: list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['sentence_embedding', 'token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> list[Tensor], (sentences: list[str] | ndarray[tuple[Any, ...], dtype[Any]], prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: None = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> list[dict[str, Tensor]], (sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: None = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> dict[str, Tensor], (sentences: str, prompt_name: str | None = ..., prompt: str | None = ..., batch_size: int = ..., show_progress_bar: bool | None = ..., output_value: Literal['token_embeddings'] = ..., precision: Literal['float32', 'int8', 'uint8', 'binary', 'ubinary'] = ..., convert_to_numpy: bool = ..., convert_to_tensor: bool = ..., device: str | list[str | device] | None = ..., normalize_embeddings: bool = ..., truncate_dim: int | None = ..., pool: dict[Literal['input', 'output', 'processes'], Any] | None = ..., chunk_size: int | None = ..., **kwargs: Unknown) -> Tensor]\"",
            "range": {
                "start": {
                    "line": 134,
                    "character": 52
                },
                "end": {
                    "line": 134,
                    "character": 70
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/dense.py",
            "severity": "error",
            "message": "Type of \"tolist\" is partially unknown\n  Type of \"tolist\" is \"Unknown | (() -> list[Unknown])\"",
            "range": {
                "start": {
                    "line": 135,
                    "character": 19
                },
                "end": {
                    "line": 135,
                    "character": 35
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/dense.py",
            "severity": "error",
            "message": "Return type, \"tuple[list[Unknown] | Unknown, dict[str, Any]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 135,
                    "character": 19
                },
                "end": {
                    "line": 135,
                    "character": 83
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/dense.py",
            "severity": "error",
            "message": "Cannot access attribute \"tolist\" for class \"object\"\n  Attribute \"tolist\" is unknown",
            "range": {
                "start": {
                    "line": 135,
                    "character": 29
                },
                "end": {
                    "line": 135,
                    "character": 35
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/hybrid.py",
            "severity": "error",
            "message": "Type of \"results\" is unknown",
            "range": {
                "start": {
                    "line": 43,
                    "character": 12
                },
                "end": {
                    "line": 43,
                    "character": 19
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/hybrid.py",
            "severity": "error",
            "message": "Type of \"meta\" is unknown",
            "range": {
                "start": {
                    "line": 43,
                    "character": 21
                },
                "end": {
                    "line": 43,
                    "character": 25
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/hybrid.py",
            "severity": "error",
            "message": "\"CoroutineType[Any, Any, Tuple[List[Tuple[str, float]], Dict[str, Any]]]\" is not iterable\n  \"__iter__\" method not defined",
            "range": {
                "start": {
                    "line": 43,
                    "character": 28
                },
                "end": {
                    "line": 43,
                    "character": 64
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/hybrid.py",
            "severity": "error",
            "message": "Type of \"wrapped\" is partially unknown\n  Type of \"wrapped\" is \"list[dict[str, Unknown | str]]\"",
            "range": {
                "start": {
                    "line": 44,
                    "character": 12
                },
                "end": {
                    "line": 44,
                    "character": 19
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/hybrid.py",
            "severity": "error",
            "message": "Type of \"doc_id\" is unknown",
            "range": {
                "start": {
                    "line": 46,
                    "character": 20
                },
                "end": {
                    "line": 46,
                    "character": 26
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/hybrid.py",
            "severity": "error",
            "message": "Type of \"score\" is unknown",
            "range": {
                "start": {
                    "line": 46,
                    "character": 28
                },
                "end": {
                    "line": 46,
                    "character": 33
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/hybrid.py",
            "severity": "error",
            "message": "Type of \"update\" is unknown",
            "range": {
                "start": {
                    "line": 48,
                    "character": 12
                },
                "end": {
                    "line": 48,
                    "character": 23
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/hybrid.py",
            "severity": "error",
            "message": "Return type, \"tuple[list[dict[str, Unknown | str]], Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 49,
                    "character": 19
                },
                "end": {
                    "line": 49,
                    "character": 32
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/hybrid.py",
            "severity": "error",
            "message": "Type of \"dense_results\" is unknown",
            "range": {
                "start": {
                    "line": 67,
                    "character": 12
                },
                "end": {
                    "line": 67,
                    "character": 25
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/hybrid.py",
            "severity": "error",
            "message": "Type of \"_\" is unknown",
            "range": {
                "start": {
                    "line": 67,
                    "character": 27
                },
                "end": {
                    "line": 67,
                    "character": 28
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/hybrid.py",
            "severity": "error",
            "message": "\"CoroutineType[Any, Any, Tuple[List[Tuple[str, float]], Dict[str, Any]]]\" is not iterable\n  \"__iter__\" method not defined",
            "range": {
                "start": {
                    "line": 67,
                    "character": 31
                },
                "end": {
                    "line": 67,
                    "character": 52
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/lexical.py",
            "severity": "error",
            "message": "Stub file not found for \"rank_bm25\"",
            "range": {
                "start": {
                    "line": 4,
                    "character": 5
                },
                "end": {
                    "line": 4,
                    "character": 14
                }
            },
            "rule": "reportMissingTypeStubs"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/lexical.py",
            "severity": "error",
            "message": "Stub file not found for \"nltk.stem\"",
            "range": {
                "start": {
                    "line": 7,
                    "character": 9
                },
                "end": {
                    "line": 7,
                    "character": 18
                }
            },
            "rule": "reportMissingTypeStubs"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/lexical.py",
            "severity": "error",
            "message": "Object of type \"None\" cannot be called",
            "range": {
                "start": {
                    "line": 31,
                    "character": 23
                },
                "end": {
                    "line": 31,
                    "character": 38
                }
            },
            "rule": "reportOptionalCall"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/lexical.py",
            "severity": "error",
            "message": "Type of \"tokens\" is partially unknown\n  Type of \"tokens\" is \"list[Unknown | str]\"",
            "range": {
                "start": {
                    "line": 45,
                    "character": 12
                },
                "end": {
                    "line": 45,
                    "character": 18
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/lexical.py",
            "severity": "error",
            "message": "Type of \"stem\" is partially unknown\n  Type of \"stem\" is \"(word: Unknown, to_lowercase: bool = True) -> Unknown\"",
            "range": {
                "start": {
                    "line": 45,
                    "character": 22
                },
                "end": {
                    "line": 45,
                    "character": 39
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/lexical.py",
            "severity": "error",
            "message": "Return type, \"list[Unknown | str] | List[str]\", is partially unknown",
            "range": {
                "start": {
                    "line": 46,
                    "character": 15
                },
                "end": {
                    "line": 46,
                    "character": 21
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/lexical.py",
            "severity": "error",
            "message": "Type of \"append\" is partially unknown\n  Type of \"append\" is \"(object: Unknown, /) -> None\"",
            "range": {
                "start": {
                    "line": 61,
                    "character": 16
                },
                "end": {
                    "line": 61,
                    "character": 26
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/lexical.py",
            "severity": "error",
            "message": "Return type, \"tuple[list[Unknown], dict[str, Any]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 64,
                    "character": 19
                },
                "end": {
                    "line": 64,
                    "character": 64
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/lexical.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"obj\" in function \"len\"\n  Argument type is \"list[Unknown]\"",
            "range": {
                "start": {
                    "line": 64,
                    "character": 59
                },
                "end": {
                    "line": 64,
                    "character": 62
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/lexical.py",
            "severity": "error",
            "message": "Type of \"scores\" is partially unknown\n  Type of \"scores\" is \"ndarray[tuple[int], dtype[float64]] | Unknown\"",
            "range": {
                "start": {
                    "line": 77,
                    "character": 12
                },
                "end": {
                    "line": 77,
                    "character": 18
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/lexical.py",
            "severity": "error",
            "message": "Type of \"get_scores\" is partially unknown\n  Type of \"get_scores\" is \"(query: Unknown) -> (ndarray[tuple[int], dtype[float64]] | Unknown)\"",
            "range": {
                "start": {
                    "line": 77,
                    "character": 21
                },
                "end": {
                    "line": 77,
                    "character": 41
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/lexical.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"iter2\" in function \"__new__\"\n  Argument type is \"ndarray[tuple[int], dtype[float64]] | Unknown\"",
            "range": {
                "start": {
                    "line": 79,
                    "character": 34
                },
                "end": {
                    "line": 79,
                    "character": 40
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/retrieval/lexical.py",
            "severity": "error",
            "message": "Type \"tuple[list[tuple[str, float64]], dict[str, Any]]\" is not assignable to return type \"Tuple[List[Tuple[str, float]], Dict[str, Any]]\"\n  \"list[tuple[str, float64]]\" is not assignable to \"List[Tuple[str, float]]\"\n    Type parameter \"_T@list\" is invariant, but \"tuple[str, float64]\" is not the same as \"Tuple[str, float]\"\n    Consider switching from \"list\" to \"Sequence\" which is covariant",
            "range": {
                "start": {
                    "line": 81,
                    "character": 19
                },
                "end": {
                    "line": 81,
                    "character": 25
                }
            },
            "rule": "reportReturnType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/services/document_service.py",
            "severity": "error",
            "message": "Argument of type \"Path\" cannot be assigned to parameter \"docx\" of type \"str | IO[bytes] | None\" in function \"Document\"\n  Type \"Path\" is not assignable to type \"str | IO[bytes] | None\"\n    \"Path\" is not assignable to \"str\"\n    \"Path\" is not assignable to \"IO[bytes]\"\n    \"Path\" is not assignable to \"None\"",
            "range": {
                "start": {
                    "line": 51,
                    "character": 31
                },
                "end": {
                    "line": 51,
                    "character": 35
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/services/document_service.py",
            "severity": "error",
            "message": "Type of \"dense_ids\" is unknown",
            "range": {
                "start": {
                    "line": 132,
                    "character": 12
                },
                "end": {
                    "line": 132,
                    "character": 21
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/services/document_service.py",
            "severity": "error",
            "message": "Type of \"dense_meta\" is unknown",
            "range": {
                "start": {
                    "line": 132,
                    "character": 23
                },
                "end": {
                    "line": 132,
                    "character": 33
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/services/document_service.py",
            "severity": "error",
            "message": "\"CoroutineType[Any, Any, Tuple[List[str], Dict[str, Any]]]\" is not iterable\n  \"__iter__\" method not defined",
            "range": {
                "start": {
                    "line": 132,
                    "character": 36
                },
                "end": {
                    "line": 134,
                    "character": 13
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/chat.py",
            "severity": "error",
            "message": "Return type, \"tuple[list[Unknown], dict[str, str | dict[Unknown, Unknown]]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 23,
                    "character": 8
                },
                "end": {
                    "line": 23,
                    "character": 13
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/chat.py",
            "severity": "error",
            "message": "Return type, \"tuple[list[Unknown], dict[str, str | dict[Unknown, Unknown]]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 24,
                    "character": 15
                },
                "end": {
                    "line": 28,
                    "character": 9
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/chat.py",
            "severity": "error",
            "message": "Argument of type \"_StubHybridRetriever\" cannot be assigned to parameter \"retriever\" of type \"HybridRetriever\" in function \"__init__\"\n  \"_StubHybridRetriever\" is not assignable to \"HybridRetriever\"",
            "range": {
                "start": {
                    "line": 31,
                    "character": 29
                },
                "end": {
                    "line": 31,
                    "character": 51
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/chat.py",
            "severity": "error",
            "message": "Type of \"append\" is partially unknown\n  Type of \"append\" is \"(object: Unknown, /) -> None\"",
            "range": {
                "start": {
                    "line": 73,
                    "character": 8
                },
                "end": {
                    "line": 73,
                    "character": 24
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/chat.py",
            "severity": "error",
            "message": "Type of \"metadata\" is partially unknown\n  Type of \"metadata\" is \"dict[str, Any | dict[str, Any | None] | list[Unknown]]\"",
            "range": {
                "start": {
                    "line": 81,
                    "character": 4
                },
                "end": {
                    "line": 81,
                    "character": 12
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/components/__init__.py",
            "severity": "error",
            "message": "\"ranking_controls\" is specified in __all__ but is not present in module",
            "range": {
                "start": {
                    "line": 2,
                    "character": 11
                },
                "end": {
                    "line": 2,
                    "character": 29
                }
            },
            "rule": "reportUnsupportedDunderAll"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/components/__init__.py",
            "severity": "error",
            "message": "\"transparency\" is specified in __all__ but is not present in module",
            "range": {
                "start": {
                    "line": 2,
                    "character": 31
                },
                "end": {
                    "line": 2,
                    "character": 45
                }
            },
            "rule": "reportUnsupportedDunderAll"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/components/transparency.py",
            "severity": "error",
            "message": "Type of \"append\" is partially unknown\n  Type of \"append\" is \"(object: Unknown, /) -> None\"",
            "range": {
                "start": {
                    "line": 28,
                    "character": 12
                },
                "end": {
                    "line": 28,
                    "character": 24
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/components/transparency.py",
            "severity": "error",
            "message": "Type of \"append\" is partially unknown\n  Type of \"append\" is \"(object: Unknown, /) -> None\"",
            "range": {
                "start": {
                    "line": 30,
                    "character": 12
                },
                "end": {
                    "line": 30,
                    "character": 24
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/components/transparency.py",
            "severity": "error",
            "message": "Type of \"append\" is partially unknown\n  Type of \"append\" is \"(object: Unknown, /) -> None\"",
            "range": {
                "start": {
                    "line": 32,
                    "character": 12
                },
                "end": {
                    "line": 32,
                    "character": 24
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/components/transparency.py",
            "severity": "error",
            "message": "Type of \"append\" is partially unknown\n  Type of \"append\" is \"(object: Unknown, /) -> None\"",
            "range": {
                "start": {
                    "line": 34,
                    "character": 12
                },
                "end": {
                    "line": 34,
                    "character": 24
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/components/transparency.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"iterable\" in function \"join\"\n  Argument type is \"list[Unknown]\"",
            "range": {
                "start": {
                    "line": 35,
                    "character": 33
                },
                "end": {
                    "line": 35,
                    "character": 38
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/components/transparency.py",
            "severity": "error",
            "message": "Type of \"content\" is partially unknown\n  Type of \"content\" is \"dict[Unknown, Unknown]\"",
            "range": {
                "start": {
                    "line": 57,
                    "character": 4
                },
                "end": {
                    "line": 57,
                    "character": 11
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/components/transparency.py",
            "severity": "error",
            "message": "Type of \"append\" is partially unknown\n  Type of \"append\" is \"(object: Unknown, /) -> None\"",
            "range": {
                "start": {
                    "line": 157,
                    "character": 12
                },
                "end": {
                    "line": 157,
                    "character": 28
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/components/transparency.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"iterable\" in function \"join\"\n  Argument type is \"list[Unknown]\"",
            "range": {
                "start": {
                    "line": 159,
                    "character": 31
                },
                "end": {
                    "line": 159,
                    "character": 40
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Stub file not found for \"pandas\"",
            "range": {
                "start": {
                    "line": 8,
                    "character": 7
                },
                "end": {
                    "line": 8,
                    "character": 13
                }
            },
            "rule": "reportMissingTypeStubs"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Stub file not found for \"plotly.express\"",
            "range": {
                "start": {
                    "line": 9,
                    "character": 7
                },
                "end": {
                    "line": 9,
                    "character": 21
                }
            },
            "rule": "reportMissingTypeStubs"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Argument of type \"list[str]\" cannot be assigned to parameter \"columns\" of type \"Axes | None\" in function \"__init__\"\n  Type \"list[str]\" is not assignable to type \"Axes | None\"\n    \"list[str]\" is not assignable to \"ExtensionArray\"\n    \"list[str]\" is not assignable to \"ndarray[_AnyShape, dtype[Any]]\"\n    \"list[str]\" is not assignable to \"Index\"\n    \"list[str]\" is not assignable to \"Series\"\n    \"list[str]\" is incompatible with protocol \"SequenceNotStr[Unknown]\"\n      \"index\" is an incompatible type\n        Type \"(value: str, start: SupportsIndex = 0, stop: SupportsIndex = sys.maxsize, /) -> int\" is not assignable to type \"(value: Any, /, start: int = 0, stop: int = ...) -> int\"\n  ...",
            "range": {
                "start": {
                    "line": 30,
                    "character": 36
                },
                "end": {
                    "line": 30,
                    "character": 55
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "No overloads for \"sum\" match the provided arguments",
            "range": {
                "start": {
                    "line": 47,
                    "character": 12
                },
                "end": {
                    "line": 47,
                    "character": 52
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Argument of type \"Generator[str | Any, None, None]\" cannot be assigned to parameter \"iterable\" of type \"Iterable[_SupportsSumNoDefaultT@sum]\" in function \"sum\"\n  \"Generator[str | Any, None, None]\" is not assignable to \"Iterable[_SupportsSumNoDefaultT@sum]\"\n    Type parameter \"_T_co@Iterable\" is covariant, but \"str | Any\" is not a subtype of \"_SupportsSumNoDefaultT@sum\"\n      Type \"str | Any\" is not assignable to type \"_SupportsSumWithNoDefaultGiven\"\n        Type \"str | Any\" is not assignable to type \"_SupportsSumWithNoDefaultGiven\"\n          \"str\" is incompatible with protocol \"_SupportsSumWithNoDefaultGiven\"",
            "range": {
                "start": {
                    "line": 47,
                    "character": 16
                },
                "end": {
                    "line": 47,
                    "character": 51
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"append\" is partially unknown\n  Type of \"append\" is \"(object: Unknown, /) -> None\"",
            "range": {
                "start": {
                    "line": 51,
                    "character": 8
                },
                "end": {
                    "line": 51,
                    "character": 22
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Argument of type \"list[str]\" cannot be assigned to parameter \"columns\" of type \"Axes | None\" in function \"__init__\"\n  Type \"list[str]\" is not assignable to type \"Axes | None\"\n    \"list[str]\" is not assignable to \"ExtensionArray\"\n    \"list[str]\" is not assignable to \"ndarray[_AnyShape, dtype[Any]]\"\n    \"list[str]\" is not assignable to \"Index\"\n    \"list[str]\" is not assignable to \"Series\"\n    \"list[str]\" is incompatible with protocol \"SequenceNotStr[Unknown]\"\n      \"index\" is an incompatible type\n        Type \"(value: str, start: SupportsIndex = 0, stop: SupportsIndex = sys.maxsize, /) -> int\" is not assignable to type \"(value: Any, /, start: int = 0, stop: int = ...) -> int\"\n  ...",
            "range": {
                "start": {
                    "line": 52,
                    "character": 41
                },
                "end": {
                    "line": 52,
                    "character": 60
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"line\" is partially unknown\n  Type of \"line\" is \"(data_frame: Unknown | None = None, x: Unknown | None = None, y: Unknown | None = None, line_group: Unknown | None = None, color: Unknown | None = None, line_dash: Unknown | None = None, symbol: Unknown | None = None, hover_name: Unknown | None = None, hover_data: Unknown | None = None, custom_data: Unknown | None = None, text: Unknown | None = None, facet_row: Unknown | None = None, facet_col: Unknown | None = None, facet_col_wrap: int = 0, facet_row_spacing: Unknown | None = None, facet_col_spacing: Unknown | None = None, error_x: Unknown | None = None, error_x_minus: Unknown | None = None, error_y: Unknown | None = None, error_y_minus: Unknown | None = None, animation_frame: Unknown | None = None, animation_group: Unknown | None = None, category_orders: Unknown | None = None, labels: Unknown | None = None, orientation: Unknown | None = None, color_discrete_sequence: Unknown | None = None, color_discrete_map: Unknown | None = None, line_dash_sequence: Unknown | None = None, line_dash_map: Unknown | None = None, symbol_sequence: Unknown | None = None, symbol_map: Unknown | None = None, markers: bool = False, log_x: bool = False, log_y: bool = False, range_x: Unknown | None = None, range_y: Unknown | None = None, line_shape: Unknown | None = None, render_mode: str = \"auto\", title: Unknown | None = None, subtitle: Unknown | None = None, template: Unknown | None = None, width: Unknown | None = None, height: Unknown | None = None) -> Figure\"",
            "range": {
                "start": {
                    "line": 80,
                    "character": 14
                },
                "end": {
                    "line": 80,
                    "character": 21
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"to_datetime\" is partially unknown\n  Type of \"to_datetime\" is \"Overload[(arg: float | str | date | datetime64[date | int | None], errors: Literal['ignore', 'raise', 'coerce'] = ..., dayfirst: bool = ..., yearfirst: bool = ..., utc: bool = ..., format: str | None = ..., exact: bool = ..., unit: str | None = ..., infer_datetime_format: bool = ..., origin: ... = ..., cache: bool = ...) -> Timestamp, (arg: Series | FulldatetimeDict | DataFrame, errors: Literal['ignore', 'raise', 'coerce'] = ..., dayfirst: bool = ..., yearfirst: bool = ..., utc: bool = ..., format: str | None = ..., exact: bool = ..., unit: str | None = ..., infer_datetime_format: bool = ..., origin: ... = ..., cache: bool = ...) -> Series, (arg: list[Unknown] | tuple[Unknown, ...] | Index | ExtensionArray | ndarray[tuple[Any, ...], dtype[Any]], errors: Literal['ignore', 'raise', 'coerce'] = ..., dayfirst: bool = ..., yearfirst: bool = ..., utc: bool = ..., format: str | None = ..., exact: bool = ..., unit: str | None = ..., infer_datetime_format: bool = ..., origin: ... = ..., cache: bool = ...) -> DatetimeIndex]\"",
            "range": {
                "start": {
                    "line": 96,
                    "character": 22
                },
                "end": {
                    "line": 96,
                    "character": 36
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"arg\" in function \"to_datetime\"\n  Argument type is \"Series | Unknown | DataFrame\"",
            "range": {
                "start": {
                    "line": 96,
                    "character": 37
                },
                "end": {
                    "line": 96,
                    "character": 52
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"avg_score\" is partially unknown\n  Type of \"avg_score\" is \"Series | float | int | Unknown\"",
            "range": {
                "start": {
                    "line": 97,
                    "character": 4
                },
                "end": {
                    "line": 97,
                    "character": 13
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"mean\" is partially unknown\n  Type of \"mean\" is \"((axis: int | Literal['index', 'columns', 'rows'] | None = 0, skipna: bool = True, numeric_only: bool = False, **kwargs: Unknown) -> (Series | float)) | Unknown | ((axis: int | Literal['index', 'columns', 'rows'] | None = 0, skipna: bool = True, numeric_only: bool = False, **kwargs: Unknown) -> (Series | float | int))\"",
            "range": {
                "start": {
                    "line": 97,
                    "character": 16
                },
                "end": {
                    "line": 97,
                    "character": 32
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"line\" is partially unknown\n  Type of \"line\" is \"(data_frame: Unknown | None = None, x: Unknown | None = None, y: Unknown | None = None, line_group: Unknown | None = None, color: Unknown | None = None, line_dash: Unknown | None = None, symbol: Unknown | None = None, hover_name: Unknown | None = None, hover_data: Unknown | None = None, custom_data: Unknown | None = None, text: Unknown | None = None, facet_row: Unknown | None = None, facet_col: Unknown | None = None, facet_col_wrap: int = 0, facet_row_spacing: Unknown | None = None, facet_col_spacing: Unknown | None = None, error_x: Unknown | None = None, error_x_minus: Unknown | None = None, error_y: Unknown | None = None, error_y_minus: Unknown | None = None, animation_frame: Unknown | None = None, animation_group: Unknown | None = None, category_orders: Unknown | None = None, labels: Unknown | None = None, orientation: Unknown | None = None, color_discrete_sequence: Unknown | None = None, color_discrete_map: Unknown | None = None, line_dash_sequence: Unknown | None = None, line_dash_map: Unknown | None = None, symbol_sequence: Unknown | None = None, symbol_map: Unknown | None = None, markers: bool = False, log_x: bool = False, log_y: bool = False, range_x: Unknown | None = None, range_y: Unknown | None = None, line_shape: Unknown | None = None, render_mode: str = \"auto\", title: Unknown | None = None, subtitle: Unknown | None = None, template: Unknown | None = None, width: Unknown | None = None, height: Unknown | None = None) -> Figure\"",
            "range": {
                "start": {
                    "line": 99,
                    "character": 10
                },
                "end": {
                    "line": 99,
                    "character": 17
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"correlations\" is partially unknown\n  Type of \"correlations\" is \"str | Unknown\"",
            "range": {
                "start": {
                    "line": 105,
                    "character": 4
                },
                "end": {
                    "line": 105,
                    "character": 16
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"corr\" is partially unknown\n  Type of \"corr\" is \"((other: Series, method: ((ndarray[tuple[Any, ...], dtype[Any]], ndarray[tuple[Any, ...], dtype[Any]]) -> float) | Literal['pearson', 'kendall', 'spearman'] = \"pearson\", min_periods: int | None = None) -> float) | Unknown | ((method: ((ndarray[tuple[Any, ...], dtype[Any]], ndarray[tuple[Any, ...], dtype[Any]]) -> float) | Literal['pearson', 'kendall', 'spearman'] = \"pearson\", min_periods: int = 1, numeric_only: bool = False) -> DataFrame)\"",
            "range": {
                "start": {
                    "line": 106,
                    "character": 8
                },
                "end": {
                    "line": 107,
                    "character": 13
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Argument missing for parameter \"other\"",
            "range": {
                "start": {
                    "line": 106,
                    "character": 8
                },
                "end": {
                    "line": 107,
                    "character": 15
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"to_string\" is partially unknown\n  Type of \"to_string\" is \"Overload[(buf: None = ..., columns: ExtensionArray | ndarray[tuple[Any, ...], dtype[Any]] | Index | Series | SequenceNotStr[Unknown] | range | None = ..., col_space: int | list[int] | dict[Hashable, int] | None = ..., header: bool | SequenceNotStr[str] = ..., index: bool = ..., na_rep: str = ..., formatters: list[(...) -> Unknown] | tuple[(...) -> Unknown, ...] | Mapping[str | int, (...) -> Unknown] | None = ..., float_format: str | ((...) -> Unknown) | EngFormatter | None = ..., sparsify: bool | None = ..., index_names: bool = ..., justify: str | None = ..., max_rows: int | None = ..., max_cols: int | None = ..., show_dimensions: bool = ..., decimal: str = ..., line_width: int | None = ..., min_rows: int | None = ..., max_colwidth: int | None = ..., encoding: str | None = ...) -> str, (buf: str | PathLike[str] | WriteBuffer[str], columns: ExtensionArray | ndarray[tuple[Any, ...], dtype[Any]] | Index | Series | SequenceNotStr[Unknown] | range | None = ..., col_space: int | list[int] | dict[Hashable, int] | None = ..., header: bool | SequenceNotStr[str] = ..., index: bool = ..., na_rep: str = ..., formatters: list[(...) -> Unknown] | tuple[(...) -> Unknown, ...] | Mapping[str | int, (...) -> Unknown] | None = ..., float_format: str | ((...) -> Unknown) | EngFormatter | None = ..., sparsify: bool | None = ..., index_names: bool = ..., justify: str | None = ..., max_rows: int | None = ..., max_cols: int | None = ..., show_dimensions: bool = ..., decimal: str = ..., line_width: int | None = ..., min_rows: int | None = ..., max_colwidth: int | None = ..., encoding: str | None = ...) -> None] | Unknown\"",
            "range": {
                "start": {
                    "line": 106,
                    "character": 8
                },
                "end": {
                    "line": 108,
                    "character": 18
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"alerts_df\" is partially unknown\n  Type of \"alerts_df\" is \"Series | Any | ndarray[tuple[Any, ...], dtype[Any]] | Unknown | DataFrame\"",
            "range": {
                "start": {
                    "line": 115,
                    "character": 4
                },
                "end": {
                    "line": 115,
                    "character": 13
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"empty\" is partially unknown\n  Type of \"empty\" is \"bool | Any | Unknown\"",
            "range": {
                "start": {
                    "line": 120,
                    "character": 7
                },
                "end": {
                    "line": 120,
                    "character": 22
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Cannot access attribute \"empty\" for class \"ndarray[_AnyShape, dtype[Any]]\"\n  Attribute \"empty\" is unknown",
            "range": {
                "start": {
                    "line": 120,
                    "character": 17
                },
                "end": {
                    "line": 120,
                    "character": 22
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"alerts\" is partially unknown\n  Type of \"alerts\" is \"str | Any | Unknown\"",
            "range": {
                "start": {
                    "line": 123,
                    "character": 8
                },
                "end": {
                    "line": 123,
                    "character": 14
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"to_string\" is partially unknown\n  Type of \"to_string\" is \"Overload[(buf: None = ..., na_rep: str = ..., float_format: str | None = ..., header: bool = ..., index: bool = ..., length: bool = ..., dtype: ... = ..., name: ... = ..., max_rows: int | None = ..., min_rows: int | None = ...) -> str, (buf: str | PathLike[str] | WriteBuffer[str], na_rep: str = ..., float_format: str | None = ..., header: bool = ..., index: bool = ..., length: bool = ..., dtype: ... = ..., name: ... = ..., max_rows: int | None = ..., min_rows: int | None = ...) -> None] | Any | Unknown | Overload[(buf: None = ..., columns: ExtensionArray | ndarray[tuple[Any, ...], dtype[Any]] | Index | Series | SequenceNotStr[Unknown] | range | None = ..., col_space: int | list[int] | dict[Hashable, int] | None = ..., header: bool | SequenceNotStr[str] = ..., index: bool = ..., na_rep: str = ..., formatters: list[(...) -> Unknown] | tuple[(...) -> Unknown, ...] | Mapping[str | int, (...) -> Unknown] | None = ..., float_format: str | ((...) -> Unknown) | EngFormatter | None = ..., sparsify: bool | None = ..., index_names: bool = ..., justify: str | None = ..., max_rows: int | None = ..., max_cols: int | None = ..., show_dimensions: bool = ..., decimal: str = ..., line_width: int | None = ..., min_rows: int | None = ..., max_colwidth: int | None = ..., encoding: str | None = ...) -> str, (buf: str | PathLike[str] | WriteBuffer[str], columns: ExtensionArray | ndarray[tuple[Any, ...], dtype[Any]] | Index | Series | SequenceNotStr[Unknown] | range | None = ..., col_space: int | list[int] | dict[Hashable, int] | None = ..., header: bool | SequenceNotStr[str] = ..., index: bool = ..., na_rep: str = ..., formatters: list[(...) -> Unknown] | tuple[(...) -> Unknown, ...] | Mapping[str | int, (...) -> Unknown] | None = ..., float_format: str | ((...) -> Unknown) | EngFormatter | None = ..., sparsify: bool | None = ..., index_names: bool = ..., justify: str | None = ..., max_rows: int | None = ..., max_cols: int | None = ..., show_dimensions: bool = ..., decimal: str = ..., line_width: int | None = ..., min_rows: int | None = ..., max_colwidth: int | None = ..., encoding: str | None = ...) -> None]\"",
            "range": {
                "start": {
                    "line": 123,
                    "character": 17
                },
                "end": {
                    "line": 123,
                    "character": 36
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Cannot access attribute \"to_string\" for class \"ndarray[_AnyShape, dtype[Any]]\"\n  Attribute \"to_string\" is unknown",
            "range": {
                "start": {
                    "line": 123,
                    "character": 27
                },
                "end": {
                    "line": 123,
                    "character": 36
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"avg_relevancy\" is partially unknown\n  Type of \"avg_relevancy\" is \"Series | float | int | Unknown\"",
            "range": {
                "start": {
                    "line": 124,
                    "character": 4
                },
                "end": {
                    "line": 124,
                    "character": 17
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"mean\" is partially unknown\n  Type of \"mean\" is \"((axis: int | Literal['index', 'columns', 'rows'] | None = 0, skipna: bool = True, numeric_only: bool = False, **kwargs: Unknown) -> (Series | float)) | Unknown | ((axis: int | Literal['index', 'columns', 'rows'] | None = 0, skipna: bool = True, numeric_only: bool = False, **kwargs: Unknown) -> (Series | float | int))\"",
            "range": {
                "start": {
                    "line": 124,
                    "character": 20
                },
                "end": {
                    "line": 124,
                    "character": 40
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"avg_precision\" is partially unknown\n  Type of \"avg_precision\" is \"Series | float | int | Unknown\"",
            "range": {
                "start": {
                    "line": 125,
                    "character": 4
                },
                "end": {
                    "line": 125,
                    "character": 17
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"mean\" is partially unknown\n  Type of \"mean\" is \"((axis: int | Literal['index', 'columns', 'rows'] | None = 0, skipna: bool = True, numeric_only: bool = False, **kwargs: Unknown) -> (Series | float)) | Unknown | ((axis: int | Literal['index', 'columns', 'rows'] | None = 0, skipna: bool = True, numeric_only: bool = False, **kwargs: Unknown) -> (Series | float | int))\"",
            "range": {
                "start": {
                    "line": 125,
                    "character": 20
                },
                "end": {
                    "line": 125,
                    "character": 40
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"avg_faithfulness\" is partially unknown\n  Type of \"avg_faithfulness\" is \"Series | float | int | Unknown\"",
            "range": {
                "start": {
                    "line": 126,
                    "character": 4
                },
                "end": {
                    "line": 126,
                    "character": 20
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"mean\" is partially unknown\n  Type of \"mean\" is \"((axis: int | Literal['index', 'columns', 'rows'] | None = 0, skipna: bool = True, numeric_only: bool = False, **kwargs: Unknown) -> (Series | float)) | Unknown | ((axis: int | Literal['index', 'columns', 'rows'] | None = 0, skipna: bool = True, numeric_only: bool = False, **kwargs: Unknown) -> (Series | float | int))\"",
            "range": {
                "start": {
                    "line": 126,
                    "character": 23
                },
                "end": {
                    "line": 126,
                    "character": 46
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Argument of type \"dict[str, Series | float | int | Unknown]\" cannot be assigned to parameter \"metrics\" of type \"Dict[str, float]\" in function \"generate_recommendations\"\n  Type \"Series | float | int | Unknown\" is not assignable to type \"float\"\n    \"Series\" is not assignable to \"float\"\n  Type \"Series | float | int | Unknown\" is not assignable to type \"float\"\n    \"Series\" is not assignable to \"float\"\n  Type \"Series | float | int | Unknown\" is not assignable to type \"float\"\n    \"Series\" is not assignable to \"float\"",
            "range": {
                "start": {
                    "line": 128,
                    "character": 8
                },
                "end": {
                    "line": 132,
                    "character": 9
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"to_csv\" is partially unknown\n  Type of \"to_csv\" is \"Overload[(path_or_buf: None = ..., sep: str = ..., na_rep: str = ..., float_format: str | ((...) -> Unknown) | None = ..., columns: Sequence[Hashable] | None = ..., header: bool | list[str] = ..., index: bool = ..., index_label: Hashable | Sequence[Hashable] | None = ..., mode: str = ..., encoding: str | None = ..., compression: dict[str, Any] | Literal['infer', 'gzip', 'bz2', 'zip', 'xz', 'zstd', 'tar'] | None = ..., quoting: int | None = ..., quotechar: str = ..., lineterminator: str | None = ..., chunksize: int | None = ..., date_format: str | None = ..., doublequote: bool = ..., escapechar: str | None = ..., decimal: str = ..., errors: Literal['strict', 'ignore', 'replace', 'surrogateescape', 'xmlcharrefreplace', 'backslashreplace', 'namereplace'] = ..., storage_options: dict[str, Any] | None = ...) -> str, (path_or_buf: str | PathLike[str] | WriteBuffer[bytes] | WriteBuffer[str], sep: str = ..., na_rep: str = ..., float_format: str | ((...) -> Unknown) | None = ..., columns: Sequence[Hashable] | None = ..., header: bool | list[str] = ..., index: bool = ..., index_label: Hashable | Sequence[Hashable] | None = ..., mode: str = ..., encoding: str | None = ..., compression: dict[str, Any] | Literal['infer', 'gzip', 'bz2', 'zip', 'xz', 'zstd', 'tar'] | None = ..., quoting: int | None = ..., quotechar: str = ..., lineterminator: str | None = ..., chunksize: int | None = ..., date_format: str | None = ..., doublequote: bool = ..., escapechar: str | None = ..., decimal: str = ..., errors: Literal['strict', 'ignore', 'replace', 'surrogateescape', 'xmlcharrefreplace', 'backslashreplace', 'namereplace'] = ..., storage_options: dict[str, Any] | None = ...) -> None]\"",
            "range": {
                "start": {
                    "line": 139,
                    "character": 16
                },
                "end": {
                    "line": 139,
                    "character": 25
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type of \"to_json\" is partially unknown\n  Type of \"to_json\" is \"(path_or_buf: str | PathLike[str] | WriteBuffer[bytes] | WriteBuffer[str] | None = None, orient: Literal['split', 'records', 'index', 'table', 'columns', 'values'] | None = None, date_format: str | None = None, double_precision: int = 10, force_ascii: bool = True, date_unit: Literal['s', 'ms', 'us', 'ns'] = \"ms\", default_handler: ((Any) -> (str | float | bool | list[Unknown] | dict[Unknown, Unknown] | None)) | None = None, lines: bool = False, compression: dict[str, Any] | Literal['infer', 'gzip', 'bz2', 'zip', 'xz', 'zstd', 'tar'] | None = \"infer\", index: bool | None = None, indent: int | None = None, storage_options: dict[str, Any] | None = None, mode: Literal['a', 'w'] = \"w\") -> (str | None)\"",
            "range": {
                "start": {
                    "line": 140,
                    "character": 17
                },
                "end": {
                    "line": 140,
                    "character": 27
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "\"encode\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 140,
                    "character": 46
                },
                "end": {
                    "line": 140,
                    "character": 52
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Return type, \"tuple[str, Figure, Series | Unknown | DataFrame, str | Unknown, str | Any | Unknown, str, dict[str, Any], dict[str, Any]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 143,
                    "character": 11
                },
                "end": {
                    "line": 161,
                    "character": 5
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/evaluate.py",
            "severity": "error",
            "message": "Type \"tuple[str, Figure, Series | Unknown | DataFrame, str | Unknown, str | Any | Unknown, str, dict[str, Any], dict[str, Any]]\" is not assignable to return type \"Tuple[str, Any, DataFrame, str, str, str, Dict[str, Any], Dict[str, Any]]\"\n  Type \"Series | Unknown | DataFrame\" is not assignable to type \"DataFrame\"\n    \"Series\" is not assignable to \"DataFrame\"",
            "range": {
                "start": {
                    "line": 146,
                    "character": 8
                },
                "end": {
                    "line": 155,
                    "character": 9
                }
            },
            "rule": "reportReturnType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Return type, \"tuple[list[Unknown], dict[Unknown, Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 24,
                    "character": 8
                },
                "end": {
                    "line": 24,
                    "character": 20
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type of parameter \"args\" is unknown",
            "range": {
                "start": {
                    "line": 24,
                    "character": 28
                },
                "end": {
                    "line": 24,
                    "character": 32
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"args\"",
            "range": {
                "start": {
                    "line": 24,
                    "character": 28
                },
                "end": {
                    "line": 24,
                    "character": 32
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type of parameter \"kwargs\" is unknown",
            "range": {
                "start": {
                    "line": 24,
                    "character": 36
                },
                "end": {
                    "line": 24,
                    "character": 42
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"kwargs\"",
            "range": {
                "start": {
                    "line": 24,
                    "character": 36
                },
                "end": {
                    "line": 24,
                    "character": 42
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Return type, \"tuple[list[Unknown], dict[Unknown, Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 25,
                    "character": 15
                },
                "end": {
                    "line": 25,
                    "character": 21
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[Unknown, Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 27,
                    "character": 8
                },
                "end": {
                    "line": 27,
                    "character": 23
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type of parameter \"args\" is unknown",
            "range": {
                "start": {
                    "line": 27,
                    "character": 31
                },
                "end": {
                    "line": 27,
                    "character": 35
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"args\"",
            "range": {
                "start": {
                    "line": 27,
                    "character": 31
                },
                "end": {
                    "line": 27,
                    "character": 35
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type of parameter \"kwargs\" is unknown",
            "range": {
                "start": {
                    "line": 27,
                    "character": 39
                },
                "end": {
                    "line": 27,
                    "character": 45
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"kwargs\"",
            "range": {
                "start": {
                    "line": 27,
                    "character": 39
                },
                "end": {
                    "line": 27,
                    "character": 45
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[Unknown, Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 28,
                    "character": 15
                },
                "end": {
                    "line": 28,
                    "character": 17
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[Unknown, Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 30,
                    "character": 8
                },
                "end": {
                    "line": 30,
                    "character": 23
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type of parameter \"args\" is unknown",
            "range": {
                "start": {
                    "line": 30,
                    "character": 31
                },
                "end": {
                    "line": 30,
                    "character": 35
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"args\"",
            "range": {
                "start": {
                    "line": 30,
                    "character": 31
                },
                "end": {
                    "line": 30,
                    "character": 35
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type of parameter \"kwargs\" is unknown",
            "range": {
                "start": {
                    "line": 30,
                    "character": 39
                },
                "end": {
                    "line": 30,
                    "character": 45
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"kwargs\"",
            "range": {
                "start": {
                    "line": 30,
                    "character": 39
                },
                "end": {
                    "line": 30,
                    "character": 45
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[Unknown, Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 31,
                    "character": 15
                },
                "end": {
                    "line": 31,
                    "character": 17
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Return type, \"tuple[Literal[True], dict[Unknown, Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 33,
                    "character": 8
                },
                "end": {
                    "line": 33,
                    "character": 22
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type of parameter \"args\" is unknown",
            "range": {
                "start": {
                    "line": 33,
                    "character": 30
                },
                "end": {
                    "line": 33,
                    "character": 34
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"args\"",
            "range": {
                "start": {
                    "line": 33,
                    "character": 30
                },
                "end": {
                    "line": 33,
                    "character": 34
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type of parameter \"kwargs\" is unknown",
            "range": {
                "start": {
                    "line": 33,
                    "character": 38
                },
                "end": {
                    "line": 33,
                    "character": 44
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"kwargs\"",
            "range": {
                "start": {
                    "line": 33,
                    "character": 38
                },
                "end": {
                    "line": 33,
                    "character": 44
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Return type, \"tuple[Literal[True], dict[Unknown, Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 34,
                    "character": 15
                },
                "end": {
                    "line": 34,
                    "character": 23
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Return type, \"tuple[list[Unknown], dict[Unknown, Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 40,
                    "character": 8
                },
                "end": {
                    "line": 40,
                    "character": 23
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type of parameter \"args\" is unknown",
            "range": {
                "start": {
                    "line": 40,
                    "character": 31
                },
                "end": {
                    "line": 40,
                    "character": 35
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"args\"",
            "range": {
                "start": {
                    "line": 40,
                    "character": 31
                },
                "end": {
                    "line": 40,
                    "character": 35
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type of parameter \"kwargs\" is unknown",
            "range": {
                "start": {
                    "line": 40,
                    "character": 39
                },
                "end": {
                    "line": 40,
                    "character": 45
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"kwargs\"",
            "range": {
                "start": {
                    "line": 40,
                    "character": 39
                },
                "end": {
                    "line": 40,
                    "character": 45
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Return type, \"tuple[list[Unknown], dict[Unknown, Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 41,
                    "character": 15
                },
                "end": {
                    "line": 41,
                    "character": 21
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Argument of type \"_DummyDenseRetriever\" cannot be assigned to parameter \"dense_retriever\" of type \"DenseRetriever\" in function \"__init__\"\n  \"_DummyDenseRetriever\" is not assignable to \"DenseRetriever\"",
            "range": {
                "start": {
                    "line": 45,
                    "character": 4
                },
                "end": {
                    "line": 45,
                    "character": 26
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Argument of type \"_DummyLexicalRetriever\" cannot be assigned to parameter \"lexical_retriever\" of type \"LexicalBM25\" in function \"__init__\"\n  \"_DummyLexicalRetriever\" is not assignable to \"LexicalBM25\"",
            "range": {
                "start": {
                    "line": 46,
                    "character": 4
                },
                "end": {
                    "line": 46,
                    "character": 28
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type of \"name\" is unknown",
            "range": {
                "start": {
                    "line": 78,
                    "character": 32
                },
                "end": {
                    "line": 78,
                    "character": 41
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"name\" in function \"_sanitize_name\"",
            "range": {
                "start": {
                    "line": 78,
                    "character": 32
                },
                "end": {
                    "line": 78,
                    "character": 41
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Cannot access attribute \"name\" for class \"File\"\n  Attribute \"name\" is unknown",
            "range": {
                "start": {
                    "line": 78,
                    "character": 37
                },
                "end": {
                    "line": 78,
                    "character": 41
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type of \"name\" is unknown",
            "range": {
                "start": {
                    "line": 80,
                    "character": 39
                },
                "end": {
                    "line": 80,
                    "character": 48
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"path_str\" in function \"_sanitize_path\"",
            "range": {
                "start": {
                    "line": 80,
                    "character": 39
                },
                "end": {
                    "line": 80,
                    "character": 48
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Cannot access attribute \"name\" for class \"File\"\n  Attribute \"name\" is unknown",
            "range": {
                "start": {
                    "line": 80,
                    "character": 44
                },
                "end": {
                    "line": 80,
                    "character": 48
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Type of \"metadata\" is partially unknown\n  Type of \"metadata\" is \"Any | dict[Unknown, Unknown]\"",
            "range": {
                "start": {
                    "line": 139,
                    "character": 8
                },
                "end": {
                    "line": 139,
                    "character": 16
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/ingest.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"metadata\" in function \"update_document\"\n  Argument type is \"Any | dict[Unknown, Unknown]\"",
            "range": {
                "start": {
                    "line": 142,
                    "character": 62
                },
                "end": {
                    "line": 142,
                    "character": 70
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Stub file not found for \"pandas\"",
            "range": {
                "start": {
                    "line": 7,
                    "character": 7
                },
                "end": {
                    "line": 7,
                    "character": 13
                }
            },
            "rule": "reportMissingTypeStubs"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "\"_latencies\" is protected and used outside of the class in which it is declared",
            "range": {
                "start": {
                    "line": 45,
                    "character": 45
                },
                "end": {
                    "line": 45,
                    "character": 55
                }
            },
            "rule": "reportPrivateUsage"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Type of parameter \"file\" is unknown",
            "range": {
                "start": {
                    "line": 62,
                    "character": 28
                },
                "end": {
                    "line": 62,
                    "character": 32
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"file\"",
            "range": {
                "start": {
                    "line": 62,
                    "character": 28
                },
                "end": {
                    "line": 62,
                    "character": 32
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Type of \"name\" is unknown",
            "range": {
                "start": {
                    "line": 70,
                    "character": 44
                },
                "end": {
                    "line": 70,
                    "character": 53
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"path\" in function \"load_settings\"",
            "range": {
                "start": {
                    "line": 70,
                    "character": 44
                },
                "end": {
                    "line": 70,
                    "character": 53
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Variable \"errors\" is not accessed",
            "range": {
                "start": {
                    "line": 71,
                    "character": 19
                },
                "end": {
                    "line": 71,
                    "character": 25
                }
            },
            "rule": "reportUnusedVariable"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"fn\" in function \"change\"\n  Argument type is \"(v: Unknown, s: Unknown) -> Tuple[Dict[str, Any], str]\"",
            "range": {
                "start": {
                    "line": 110,
                    "character": 20
                },
                "end": {
                    "line": 110,
                    "character": 60
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Type of parameter \"v\" is unknown",
            "range": {
                "start": {
                    "line": 110,
                    "character": 27
                },
                "end": {
                    "line": 110,
                    "character": 28
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Type of parameter \"s\" is unknown",
            "range": {
                "start": {
                    "line": 110,
                    "character": 30
                },
                "end": {
                    "line": 110,
                    "character": 31
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"settings\" in function \"update_field\"",
            "range": {
                "start": {
                    "line": 110,
                    "character": 58
                },
                "end": {
                    "line": 110,
                    "character": 59
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"fn\" in function \"change\"\n  Argument type is \"(v: Unknown, s: Unknown) -> Tuple[Dict[str, Any], str]\"",
            "range": {
                "start": {
                    "line": 115,
                    "character": 20
                },
                "end": {
                    "line": 115,
                    "character": 60
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Type of parameter \"v\" is unknown",
            "range": {
                "start": {
                    "line": 115,
                    "character": 27
                },
                "end": {
                    "line": 115,
                    "character": 28
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Type of parameter \"s\" is unknown",
            "range": {
                "start": {
                    "line": 115,
                    "character": 30
                },
                "end": {
                    "line": 115,
                    "character": 31
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"settings\" in function \"update_field\"",
            "range": {
                "start": {
                    "line": 115,
                    "character": 58
                },
                "end": {
                    "line": 115,
                    "character": 59
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "\"_latencies\" is protected and used outside of the class in which it is declared",
            "range": {
                "start": {
                    "line": 137,
                    "character": 57
                },
                "end": {
                    "line": 137,
                    "character": 67
                }
            },
            "rule": "reportPrivateUsage"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "\"_latencies\" is protected and used outside of the class in which it is declared",
            "range": {
                "start": {
                    "line": 138,
                    "character": 56
                },
                "end": {
                    "line": 138,
                    "character": 66
                }
            },
            "rule": "reportPrivateUsage"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"fn\" in function \"change\"\n  Argument type is \"(v: Unknown, s: Unknown) -> Tuple[Dict[str, Any], str]\"",
            "range": {
                "start": {
                    "line": 180,
                    "character": 20
                },
                "end": {
                    "line": 180,
                    "character": 75
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Type of parameter \"v\" is unknown",
            "range": {
                "start": {
                    "line": 180,
                    "character": 27
                },
                "end": {
                    "line": 180,
                    "character": 28
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Type of parameter \"s\" is unknown",
            "range": {
                "start": {
                    "line": 180,
                    "character": 30
                },
                "end": {
                    "line": 180,
                    "character": 31
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"settings\" in function \"update_policy_field\"",
            "range": {
                "start": {
                    "line": 180,
                    "character": 73
                },
                "end": {
                    "line": 180,
                    "character": 74
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"fn\" in function \"change\"\n  Argument type is \"(v: Unknown, s: Unknown) -> Tuple[Dict[str, Any], str]\"",
            "range": {
                "start": {
                    "line": 185,
                    "character": 20
                },
                "end": {
                    "line": 185,
                    "character": 71
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Type of parameter \"v\" is unknown",
            "range": {
                "start": {
                    "line": 185,
                    "character": 27
                },
                "end": {
                    "line": 185,
                    "character": 28
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Type of parameter \"s\" is unknown",
            "range": {
                "start": {
                    "line": 185,
                    "character": 30
                },
                "end": {
                    "line": 185,
                    "character": 31
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"settings\" in function \"update_policy_field\"",
            "range": {
                "start": {
                    "line": 185,
                    "character": 69
                },
                "end": {
                    "line": 185,
                    "character": 70
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"fn\" in function \"change\"\n  Argument type is \"(v: Unknown, s: Unknown) -> Tuple[Dict[str, Any], str]\"",
            "range": {
                "start": {
                    "line": 190,
                    "character": 20
                },
                "end": {
                    "line": 190,
                    "character": 86
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Type of parameter \"v\" is unknown",
            "range": {
                "start": {
                    "line": 190,
                    "character": 27
                },
                "end": {
                    "line": 190,
                    "character": 28
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Type of parameter \"s\" is unknown",
            "range": {
                "start": {
                    "line": 190,
                    "character": 30
                },
                "end": {
                    "line": 190,
                    "character": 31
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"settings\" in function \"update_policy_field\"",
            "range": {
                "start": {
                    "line": 190,
                    "character": 84
                },
                "end": {
                    "line": 190,
                    "character": 85
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"fn\" in function \"change\"\n  Argument type is \"(v: Unknown, s: Unknown) -> Tuple[Dict[str, Any], str]\"",
            "range": {
                "start": {
                    "line": 195,
                    "character": 20
                },
                "end": {
                    "line": 195,
                    "character": 79
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Type of parameter \"v\" is unknown",
            "range": {
                "start": {
                    "line": 195,
                    "character": 27
                },
                "end": {
                    "line": 195,
                    "character": 28
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Type of parameter \"s\" is unknown",
            "range": {
                "start": {
                    "line": 195,
                    "character": 30
                },
                "end": {
                    "line": 195,
                    "character": 31
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"settings\" in function \"update_policy_field\"",
            "range": {
                "start": {
                    "line": 195,
                    "character": 77
                },
                "end": {
                    "line": 195,
                    "character": 78
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"fn\" in function \"change\"\n  Argument type is \"(v: Unknown, s: Unknown) -> Tuple[Dict[str, Any], str]\"",
            "range": {
                "start": {
                    "line": 200,
                    "character": 20
                },
                "end": {
                    "line": 200,
                    "character": 68
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Type of parameter \"v\" is unknown",
            "range": {
                "start": {
                    "line": 200,
                    "character": 27
                },
                "end": {
                    "line": 200,
                    "character": 28
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Type of parameter \"s\" is unknown",
            "range": {
                "start": {
                    "line": 200,
                    "character": 30
                },
                "end": {
                    "line": 200,
                    "character": 31
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"settings\" in function \"update_field\"",
            "range": {
                "start": {
                    "line": 200,
                    "character": 66
                },
                "end": {
                    "line": 200,
                    "character": 67
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"fn\" in function \"click\"\n  Argument type is \"(m: Unknown) -> Any\"",
            "range": {
                "start": {
                    "line": 210,
                    "character": 20
                },
                "end": {
                    "line": 214,
                    "character": 21
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Type of parameter \"m\" is unknown",
            "range": {
                "start": {
                    "line": 210,
                    "character": 27
                },
                "end": {
                    "line": 210,
                    "character": 28
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"mode\" in function \"get_latency_trend\"",
            "range": {
                "start": {
                    "line": 213,
                    "character": 42
                },
                "end": {
                    "line": 213,
                    "character": 43
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/ui/settings.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"fn\" in function \"change\"\n  Argument type is \"(file: Unknown, settings: Dict[str, Any]) -> (tuple[Dict[str, Any], Literal[''], Any | None, Any | None] | tuple[Dict[str, Any], Literal['Invalid configuration'], Any | None, Any | None])\"",
            "range": {
                "start": {
                    "line": 231,
                    "character": 20
                },
                "end": {
                    "line": 231,
                    "character": 35
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/utils/hardware.py",
            "severity": "error",
            "message": "Type of \"core\" is unknown",
            "range": {
                "start": {
                    "line": 14,
                    "character": 8
                },
                "end": {
                    "line": 14,
                    "character": 12
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/src/utils/hardware.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"o\" in function \"getattr\"",
            "range": {
                "start": {
                    "line": 15,
                    "character": 26
                },
                "end": {
                    "line": 15,
                    "character": 30
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Import \"pytest\" is not accessed",
            "range": {
                "start": {
                    "line": 13,
                    "character": 7
                },
                "end": {
                    "line": 13,
                    "character": 13
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type of parameter \"warning_message\" is unknown",
            "range": {
                "start": {
                    "line": 19,
                    "character": 28
                },
                "end": {
                    "line": 19,
                    "character": 43
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"warning_message\"",
            "range": {
                "start": {
                    "line": 19,
                    "character": 28
                },
                "end": {
                    "line": 19,
                    "character": 43
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type of parameter \"when\" is unknown",
            "range": {
                "start": {
                    "line": 19,
                    "character": 45
                },
                "end": {
                    "line": 19,
                    "character": 49
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"when\"",
            "range": {
                "start": {
                    "line": 19,
                    "character": 45
                },
                "end": {
                    "line": 19,
                    "character": 49
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type of parameter \"nodeid\" is unknown",
            "range": {
                "start": {
                    "line": 19,
                    "character": 51
                },
                "end": {
                    "line": 19,
                    "character": 57
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"nodeid\"",
            "range": {
                "start": {
                    "line": 19,
                    "character": 51
                },
                "end": {
                    "line": 19,
                    "character": 57
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type of parameter \"location\" is unknown",
            "range": {
                "start": {
                    "line": 19,
                    "character": 59
                },
                "end": {
                    "line": 19,
                    "character": 67
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"location\"",
            "range": {
                "start": {
                    "line": 19,
                    "character": 59
                },
                "end": {
                    "line": 19,
                    "character": 67
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type of \"message\" is unknown",
            "range": {
                "start": {
                    "line": 31,
                    "character": 27
                },
                "end": {
                    "line": 31,
                    "character": 50
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"object\" in function \"__new__\"",
            "range": {
                "start": {
                    "line": 31,
                    "character": 27
                },
                "end": {
                    "line": 31,
                    "character": 50
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type of \"category\" is unknown",
            "range": {
                "start": {
                    "line": 32,
                    "character": 24
                },
                "end": {
                    "line": 32,
                    "character": 48
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type of \"__name__\" is unknown",
            "range": {
                "start": {
                    "line": 32,
                    "character": 24
                },
                "end": {
                    "line": 32,
                    "character": 57
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type of \"filename\" is unknown",
            "range": {
                "start": {
                    "line": 33,
                    "character": 24
                },
                "end": {
                    "line": 33,
                    "character": 48
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type of \"lineno\" is unknown",
            "range": {
                "start": {
                    "line": 34,
                    "character": 22
                },
                "end": {
                    "line": 34,
                    "character": 44
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type of parameter \"session\" is unknown",
            "range": {
                "start": {
                    "line": 41,
                    "character": 25
                },
                "end": {
                    "line": 41,
                    "character": 32
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"session\"",
            "range": {
                "start": {
                    "line": 41,
                    "character": 25
                },
                "end": {
                    "line": 41,
                    "character": 32
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type of parameter \"exitstatus\" is unknown",
            "range": {
                "start": {
                    "line": 41,
                    "character": 34
                },
                "end": {
                    "line": 41,
                    "character": 44
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"exitstatus\"",
            "range": {
                "start": {
                    "line": 41,
                    "character": 34
                },
                "end": {
                    "line": 41,
                    "character": 44
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type of \"config\" is unknown",
            "range": {
                "start": {
                    "line": 47,
                    "character": 12
                },
                "end": {
                    "line": 47,
                    "character": 26
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type of \"rootdir\" is unknown",
            "range": {
                "start": {
                    "line": 47,
                    "character": 12
                },
                "end": {
                    "line": 47,
                    "character": 34
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"object\" in function \"__new__\"",
            "range": {
                "start": {
                    "line": 47,
                    "character": 12
                },
                "end": {
                    "line": 47,
                    "character": 34
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type of \"tr\" is unknown",
            "range": {
                "start": {
                    "line": 84,
                    "character": 4
                },
                "end": {
                    "line": 84,
                    "character": 6
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type of \"config\" is unknown",
            "range": {
                "start": {
                    "line": 84,
                    "character": 9
                },
                "end": {
                    "line": 84,
                    "character": 23
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type of \"pluginmanager\" is unknown",
            "range": {
                "start": {
                    "line": 84,
                    "character": 9
                },
                "end": {
                    "line": 84,
                    "character": 37
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type of \"get_plugin\" is unknown",
            "range": {
                "start": {
                    "line": 84,
                    "character": 9
                },
                "end": {
                    "line": 84,
                    "character": 48
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/conftest.py",
            "severity": "error",
            "message": "Type of \"write_line\" is unknown",
            "range": {
                "start": {
                    "line": 86,
                    "character": 8
                },
                "end": {
                    "line": 86,
                    "character": 21
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_app.py",
            "severity": "error",
            "message": "Import \"pytest\" is not accessed",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 13
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_config/test_backup.py",
            "severity": "error",
            "message": "Import \"pytest\" is not accessed",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 13
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_config/test_backup.py",
            "severity": "error",
            "message": "Type of \"backup_config\" is partially unknown\n  Type of \"backup_config\" is \"(path: str, backup_dir: str) -> Tuple[Path, dict[Unknown, Unknown]]\"",
            "range": {
                "start": {
                    "line": 6,
                    "character": 30
                },
                "end": {
                    "line": 6,
                    "character": 43
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_config/test_backup.py",
            "severity": "error",
            "message": "Type of \"restore_config\" is partially unknown\n  Type of \"restore_config\" is \"(backup_path: str, target_path: str) -> Tuple[Path, dict[Unknown, Unknown]]\"",
            "range": {
                "start": {
                    "line": 6,
                    "character": 45
                },
                "end": {
                    "line": 6,
                    "character": 59
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_config/test_backup.py",
            "severity": "error",
            "message": "Type of \"_\" is partially unknown\n  Type of \"_\" is \"dict[Unknown, Unknown]\"",
            "range": {
                "start": {
                    "line": 13,
                    "character": 17
                },
                "end": {
                    "line": 13,
                    "character": 18
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_config/test_runtime_config.py",
            "severity": "error",
            "message": "Type of parameter \"cfg\" is unknown",
            "range": {
                "start": {
                    "line": 46,
                    "character": 17
                },
                "end": {
                    "line": 46,
                    "character": 20
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_config/test_runtime_config.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"cfg\"",
            "range": {
                "start": {
                    "line": 46,
                    "character": 17
                },
                "end": {
                    "line": 46,
                    "character": 20
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_config/test_runtime_config.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"object\" in function \"append\"",
            "range": {
                "start": {
                    "line": 47,
                    "character": 22
                },
                "end": {
                    "line": 47,
                    "character": 64
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_config/test_runtime_config.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"callback\" in function \"register\"\n  Argument type is \"(cfg: Unknown) -> None\"",
            "range": {
                "start": {
                    "line": 49,
                    "character": 25
                },
                "end": {
                    "line": 49,
                    "character": 33
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_config/test_runtime_config_errors.py",
            "severity": "error",
            "message": "Type of parameter \"cfg\" is unknown",
            "range": {
                "start": {
                    "line": 7,
                    "character": 22
                },
                "end": {
                    "line": 7,
                    "character": 25
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_config/test_runtime_config_errors.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"cfg\"",
            "range": {
                "start": {
                    "line": 7,
                    "character": 22
                },
                "end": {
                    "line": 7,
                    "character": 25
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_config/test_runtime_config_errors.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"validator\" in function \"__init__\"\n  Argument type is \"(cfg: Unknown) -> tuple[Literal[False], dict[str, str]]\"",
            "range": {
                "start": {
                    "line": 23,
                    "character": 36
                },
                "end": {
                    "line": 23,
                    "character": 53
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_config/test_settings.py",
            "severity": "error",
            "message": "Import \"pytest\" is not accessed",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 13
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_config/test_validate.py",
            "severity": "error",
            "message": "Import \"pytest\" is not accessed",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 13
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_evaluation/test_ragas_integration.py",
            "severity": "error",
            "message": "Import \"pytest\" is not accessed",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 13
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_evaluation/test_recommendations.py",
            "severity": "error",
            "message": "\"_load_dashboard\" is private and used outside of the module in which it is declared",
            "range": {
                "start": {
                    "line": 7,
                    "character": 28
                },
                "end": {
                    "line": 7,
                    "character": 43
                }
            },
            "rule": "reportPrivateUsage"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_evaluation/test_recommendations.py",
            "severity": "error",
            "message": "Type of parameter \"start\" is unknown",
            "range": {
                "start": {
                    "line": 74,
                    "character": 26
                },
                "end": {
                    "line": 74,
                    "character": 31
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_evaluation/test_recommendations.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"start\"",
            "range": {
                "start": {
                    "line": 74,
                    "character": 26
                },
                "end": {
                    "line": 74,
                    "character": 31
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_evaluation/test_recommendations.py",
            "severity": "error",
            "message": "Type of parameter \"end\" is unknown",
            "range": {
                "start": {
                    "line": 74,
                    "character": 33
                },
                "end": {
                    "line": 74,
                    "character": 36
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_evaluation/test_recommendations.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"end\"",
            "range": {
                "start": {
                    "line": 74,
                    "character": 33
                },
                "end": {
                    "line": 74,
                    "character": 36
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_evaluation/test_recommendations.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"value\" in function \"setattr\"\n  Argument type is \"(start: Unknown, end: Unknown) -> list[EvaluationResult]\"",
            "range": {
                "start": {
                    "line": 77,
                    "character": 51
                },
                "end": {
                    "line": 77,
                    "character": 68
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_evaluation/test_recommendations.py",
            "severity": "error",
            "message": "Variable \"summary\" is not accessed",
            "range": {
                "start": {
                    "line": 78,
                    "character": 4
                },
                "end": {
                    "line": 78,
                    "character": 11
                }
            },
            "rule": "reportUnusedVariable"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_evaluation/test_recommendations.py",
            "severity": "error",
            "message": "Variable \"fig\" is not accessed",
            "range": {
                "start": {
                    "line": 78,
                    "character": 13
                },
                "end": {
                    "line": 78,
                    "character": 16
                }
            },
            "rule": "reportUnusedVariable"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_evaluation/test_recommendations.py",
            "severity": "error",
            "message": "Variable \"df\" is not accessed",
            "range": {
                "start": {
                    "line": 78,
                    "character": 18
                },
                "end": {
                    "line": 78,
                    "character": 20
                }
            },
            "rule": "reportUnusedVariable"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_evaluation/test_recommendations.py",
            "severity": "error",
            "message": "Variable \"corr\" is not accessed",
            "range": {
                "start": {
                    "line": 78,
                    "character": 22
                },
                "end": {
                    "line": 78,
                    "character": 26
                }
            },
            "rule": "reportUnusedVariable"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_evaluation/test_recommendations.py",
            "severity": "error",
            "message": "Variable \"alerts\" is not accessed",
            "range": {
                "start": {
                    "line": 78,
                    "character": 28
                },
                "end": {
                    "line": 78,
                    "character": 34
                }
            },
            "rule": "reportUnusedVariable"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"vectors\" is unknown",
            "range": {
                "start": {
                    "line": 23,
                    "character": 21
                },
                "end": {
                    "line": 23,
                    "character": 28
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"vectors\"",
            "range": {
                "start": {
                    "line": 23,
                    "character": 21
                },
                "end": {
                    "line": 23,
                    "character": 28
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"namespace\" is partially unknown\n  Parameter type is \"Unknown | None\"",
            "range": {
                "start": {
                    "line": 23,
                    "character": 30
                },
                "end": {
                    "line": 23,
                    "character": 39
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"namespace\"",
            "range": {
                "start": {
                    "line": 23,
                    "character": 30
                },
                "end": {
                    "line": 23,
                    "character": 39
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"object\" in function \"append\"",
            "range": {
                "start": {
                    "line": 28,
                    "character": 41
                },
                "end": {
                    "line": 28,
                    "character": 48
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Return type, \"dict[str, list[Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 30,
                    "character": 8
                },
                "end": {
                    "line": 30,
                    "character": 13
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"vector\" is unknown",
            "range": {
                "start": {
                    "line": 30,
                    "character": 20
                },
                "end": {
                    "line": 30,
                    "character": 26
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"vector\"",
            "range": {
                "start": {
                    "line": 30,
                    "character": 20
                },
                "end": {
                    "line": 30,
                    "character": 26
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"top_k\" is unknown",
            "range": {
                "start": {
                    "line": 30,
                    "character": 28
                },
                "end": {
                    "line": 30,
                    "character": 33
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"top_k\"",
            "range": {
                "start": {
                    "line": 30,
                    "character": 28
                },
                "end": {
                    "line": 30,
                    "character": 33
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"include_metadata\" is unknown",
            "range": {
                "start": {
                    "line": 30,
                    "character": 35
                },
                "end": {
                    "line": 30,
                    "character": 51
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"include_metadata\"",
            "range": {
                "start": {
                    "line": 30,
                    "character": 35
                },
                "end": {
                    "line": 30,
                    "character": 51
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"namespace\" is partially unknown\n  Parameter type is \"Unknown | None\"",
            "range": {
                "start": {
                    "line": 30,
                    "character": 53
                },
                "end": {
                    "line": 30,
                    "character": 62
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"namespace\"",
            "range": {
                "start": {
                    "line": 30,
                    "character": 53
                },
                "end": {
                    "line": 30,
                    "character": 62
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Return type, \"dict[str, list[Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 35,
                    "character": 15
                },
                "end": {
                    "line": 35,
                    "character": 30
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"api_key\" is partially unknown\n  Parameter type is \"Unknown | None\"",
            "range": {
                "start": {
                    "line": 41,
                    "character": 18
                },
                "end": {
                    "line": 41,
                    "character": 25
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"api_key\"",
            "range": {
                "start": {
                    "line": 41,
                    "character": 18
                },
                "end": {
                    "line": 41,
                    "character": 25
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"environment\" is partially unknown\n  Parameter type is \"Unknown | None\"",
            "range": {
                "start": {
                    "line": 41,
                    "character": 32
                },
                "end": {
                    "line": 41,
                    "character": 43
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"environment\"",
            "range": {
                "start": {
                    "line": 41,
                    "character": 32
                },
                "end": {
                    "line": 41,
                    "character": 43
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Return type, \"list[Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 44,
                    "character": 8
                },
                "end": {
                    "line": 44,
                    "character": 25
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Return type, \"list[Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 45,
                    "character": 15
                },
                "end": {
                    "line": 45,
                    "character": 17
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"name\" is unknown",
            "range": {
                "start": {
                    "line": 47,
                    "character": 26
                },
                "end": {
                    "line": 47,
                    "character": 30
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"name\"",
            "range": {
                "start": {
                    "line": 47,
                    "character": 26
                },
                "end": {
                    "line": 47,
                    "character": 30
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"dimension\" is unknown",
            "range": {
                "start": {
                    "line": 47,
                    "character": 32
                },
                "end": {
                    "line": 47,
                    "character": 41
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"dimension\"",
            "range": {
                "start": {
                    "line": 47,
                    "character": 32
                },
                "end": {
                    "line": 47,
                    "character": 41
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"metric\" is unknown",
            "range": {
                "start": {
                    "line": 47,
                    "character": 43
                },
                "end": {
                    "line": 47,
                    "character": 49
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"metric\"",
            "range": {
                "start": {
                    "line": 47,
                    "character": 43
                },
                "end": {
                    "line": 47,
                    "character": 49
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"name\" is unknown",
            "range": {
                "start": {
                    "line": 58,
                    "character": 28
                },
                "end": {
                    "line": 58,
                    "character": 32
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"name\" is unknown",
            "range": {
                "start": {
                    "line": 59,
                    "character": 21
                },
                "end": {
                    "line": 59,
                    "character": 25
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"name\" is unknown",
            "range": {
                "start": {
                    "line": 60,
                    "character": 30
                },
                "end": {
                    "line": 60,
                    "character": 34
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"name\" is unknown",
            "range": {
                "start": {
                    "line": 73,
                    "character": 26
                },
                "end": {
                    "line": 73,
                    "character": 30
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"name\"",
            "range": {
                "start": {
                    "line": 73,
                    "character": 26
                },
                "end": {
                    "line": 73,
                    "character": 30
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"api_key\" is partially unknown",
            "range": {
                "start": {
                    "line": 79,
                    "character": 20
                },
                "end": {
                    "line": 79,
                    "character": 27
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"environment\" is partially unknown",
            "range": {
                "start": {
                    "line": 79,
                    "character": 34
                },
                "end": {
                    "line": 79,
                    "character": 45
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"name\" is unknown",
            "range": {
                "start": {
                    "line": 82,
                    "character": 21
                },
                "end": {
                    "line": 82,
                    "character": 25
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"kwargs\" is partially unknown",
            "range": {
                "start": {
                    "line": 83,
                    "character": 30
                },
                "end": {
                    "line": 83,
                    "character": 36
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"name\" is unknown",
            "range": {
                "start": {
                    "line": 84,
                    "character": 30
                },
                "end": {
                    "line": 84,
                    "character": 34
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"api_key\" is partially unknown",
            "range": {
                "start": {
                    "line": 97,
                    "character": 20
                },
                "end": {
                    "line": 97,
                    "character": 27
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"environment\" is partially unknown",
            "range": {
                "start": {
                    "line": 97,
                    "character": 34
                },
                "end": {
                    "line": 97,
                    "character": 45
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"name\" is unknown",
            "range": {
                "start": {
                    "line": 98,
                    "character": 21
                },
                "end": {
                    "line": 98,
                    "character": 25
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"name\" is unknown",
            "range": {
                "start": {
                    "line": 99,
                    "character": 30
                },
                "end": {
                    "line": 99,
                    "character": 34
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Return type of lambda, \"list[Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 100,
                    "character": 29
                },
                "end": {
                    "line": 100,
                    "character": 31
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"kwargs\" is partially unknown",
            "range": {
                "start": {
                    "line": 101,
                    "character": 30
                },
                "end": {
                    "line": 101,
                    "character": 36
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"name\" is unknown",
            "range": {
                "start": {
                    "line": 102,
                    "character": 28
                },
                "end": {
                    "line": 102,
                    "character": 32
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"value\" in function \"setattr\"\n  Argument type is \"(s: Unknown) -> None\"",
            "range": {
                "start": {
                    "line": 111,
                    "character": 8
                },
                "end": {
                    "line": 111,
                    "character": 39
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"s\" is unknown",
            "range": {
                "start": {
                    "line": 111,
                    "character": 15
                },
                "end": {
                    "line": 111,
                    "character": 16
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"object\" in function \"append\"",
            "range": {
                "start": {
                    "line": 111,
                    "character": 37
                },
                "end": {
                    "line": 111,
                    "character": 38
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of \"vectors\" is partially unknown\n  Type of \"vectors\" is \"list[tuple[str, list[float], dict[Unknown, Unknown]]]\"",
            "range": {
                "start": {
                    "line": 113,
                    "character": 4
                },
                "end": {
                    "line": 113,
                    "character": 11
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"vectors\" in function \"upsert_embeddings\"\n  Argument type is \"list[tuple[str, list[float], dict[Unknown, Unknown]]]\"",
            "range": {
                "start": {
                    "line": 116,
                    "character": 8
                },
                "end": {
                    "line": 116,
                    "character": 15
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"api_key\" is partially unknown",
            "range": {
                "start": {
                    "line": 129,
                    "character": 20
                },
                "end": {
                    "line": 129,
                    "character": 27
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"environment\" is partially unknown",
            "range": {
                "start": {
                    "line": 129,
                    "character": 34
                },
                "end": {
                    "line": 129,
                    "character": 45
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"name\" is unknown",
            "range": {
                "start": {
                    "line": 130,
                    "character": 21
                },
                "end": {
                    "line": 130,
                    "character": 25
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"name\" is unknown",
            "range": {
                "start": {
                    "line": 131,
                    "character": 30
                },
                "end": {
                    "line": 131,
                    "character": 34
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Return type of lambda, \"list[Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 132,
                    "character": 29
                },
                "end": {
                    "line": 132,
                    "character": 31
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"kwargs\" is partially unknown",
            "range": {
                "start": {
                    "line": 133,
                    "character": 30
                },
                "end": {
                    "line": 133,
                    "character": 36
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_integrations/test_pinecone_client.py",
            "severity": "error",
            "message": "Type of parameter \"name\" is unknown",
            "range": {
                "start": {
                    "line": 134,
                    "character": 28
                },
                "end": {
                    "line": 134,
                    "character": 32
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_monitoring/test_auto_tuner.py",
            "severity": "error",
            "message": "Import \"pytest\" is not accessed",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 13
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_monitoring/test_performance.py",
            "severity": "error",
            "message": "Type of \"approx\" is partially unknown\n  Type of \"approx\" is \"(expected: Unknown, rel: Unknown | None = None, abs: Unknown | None = None, nan_ok: bool = False) -> ApproxBase\"",
            "range": {
                "start": {
                    "line": 65,
                    "character": 45
                },
                "end": {
                    "line": 65,
                    "character": 58
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_monitoring/test_policy_management.py",
            "severity": "error",
            "message": "Import \"pytest\" is not accessed",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 13
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_monitoring/test_tracker_dashboard.py",
            "severity": "error",
            "message": "Type of \"approx\" is partially unknown\n  Type of \"approx\" is \"(expected: Unknown, rel: Unknown | None = None, abs: Unknown | None = None, nan_ok: bool = False) -> ApproxBase\"",
            "range": {
                "start": {
                    "line": 38,
                    "character": 32
                },
                "end": {
                    "line": 38,
                    "character": 45
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_monitoring/test_tracker_dashboard.py",
            "severity": "error",
            "message": "Type of \"approx\" is partially unknown\n  Type of \"approx\" is \"(expected: Unknown, rel: Unknown | None = None, abs: Unknown | None = None, nan_ok: bool = False) -> ApproxBase\"",
            "range": {
                "start": {
                    "line": 39,
                    "character": 31
                },
                "end": {
                    "line": 39,
                    "character": 44
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_monitoring/test_tracker_dashboard.py",
            "severity": "error",
            "message": "Type of \"approx\" is partially unknown\n  Type of \"approx\" is \"(expected: Unknown, rel: Unknown | None = None, abs: Unknown | None = None, nan_ok: bool = False) -> ApproxBase\"",
            "range": {
                "start": {
                    "line": 40,
                    "character": 45
                },
                "end": {
                    "line": 40,
                    "character": 58
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_query_service.py",
            "severity": "error",
            "message": "Import \"pytest\" is not accessed",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 13
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_query_service.py",
            "severity": "error",
            "message": "Return type, \"tuple[list[Unknown], dict[Unknown, Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 10,
                    "character": 8
                },
                "end": {
                    "line": 10,
                    "character": 13
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_query_service.py",
            "severity": "error",
            "message": "Type of parameter \"query\" is unknown",
            "range": {
                "start": {
                    "line": 10,
                    "character": 20
                },
                "end": {
                    "line": 10,
                    "character": 25
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_query_service.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"query\"",
            "range": {
                "start": {
                    "line": 10,
                    "character": 20
                },
                "end": {
                    "line": 10,
                    "character": 25
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_query_service.py",
            "severity": "error",
            "message": "Type of parameter \"mode\" is partially unknown\n  Parameter type is \"Unknown | None\"",
            "range": {
                "start": {
                    "line": 10,
                    "character": 27
                },
                "end": {
                    "line": 10,
                    "character": 31
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_query_service.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"mode\"",
            "range": {
                "start": {
                    "line": 10,
                    "character": 27
                },
                "end": {
                    "line": 10,
                    "character": 31
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_query_service.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"top_k\"",
            "range": {
                "start": {
                    "line": 10,
                    "character": 38
                },
                "end": {
                    "line": 10,
                    "character": 43
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_query_service.py",
            "severity": "error",
            "message": "Type of parameter \"kwargs\" is unknown",
            "range": {
                "start": {
                    "line": 10,
                    "character": 49
                },
                "end": {
                    "line": 10,
                    "character": 55
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_query_service.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"kwargs\"",
            "range": {
                "start": {
                    "line": 10,
                    "character": 49
                },
                "end": {
                    "line": 10,
                    "character": 55
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_query_service.py",
            "severity": "error",
            "message": "Type of \"last_mode\" is partially unknown\n  Type of \"last_mode\" is \"Unknown | None\"",
            "range": {
                "start": {
                    "line": 11,
                    "character": 8
                },
                "end": {
                    "line": 11,
                    "character": 22
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_query_service.py",
            "severity": "error",
            "message": "Return type, \"tuple[list[Unknown], dict[Unknown, Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 12,
                    "character": 15
                },
                "end": {
                    "line": 12,
                    "character": 21
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_query_service.py",
            "severity": "error",
            "message": "Argument of type \"StubHybrid\" cannot be assigned to parameter \"retriever\" of type \"HybridRetriever\" in function \"__init__\"\n  \"StubHybrid\" is not assignable to \"HybridRetriever\"",
            "range": {
                "start": {
                    "line": 17,
                    "character": 27
                },
                "end": {
                    "line": 17,
                    "character": 31
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_query_service.py",
            "severity": "error",
            "message": "Type of \"last_mode\" is partially unknown\n  Type of \"last_mode\" is \"Unknown | None\"",
            "range": {
                "start": {
                    "line": 19,
                    "character": 11
                },
                "end": {
                    "line": 19,
                    "character": 25
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_query_service.py",
            "severity": "error",
            "message": "Argument of type \"StubHybrid\" cannot be assigned to parameter \"retriever\" of type \"HybridRetriever\" in function \"__init__\"\n  \"StubHybrid\" is not assignable to \"HybridRetriever\"",
            "range": {
                "start": {
                    "line": 24,
                    "character": 27
                },
                "end": {
                    "line": 24,
                    "character": 31
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_query_service.py",
            "severity": "error",
            "message": "Type of \"last_mode\" is partially unknown\n  Type of \"last_mode\" is \"Unknown | None\"",
            "range": {
                "start": {
                    "line": 26,
                    "character": 11
                },
                "end": {
                    "line": 26,
                    "character": 25
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Return type, \"list[dict[str, Unknown | str]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 8,
                    "character": 4
                },
                "end": {
                    "line": 8,
                    "character": 15
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Type of parameter \"ids\" is unknown",
            "range": {
                "start": {
                    "line": 8,
                    "character": 16
                },
                "end": {
                    "line": 8,
                    "character": 19
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"ids\"",
            "range": {
                "start": {
                    "line": 8,
                    "character": 16
                },
                "end": {
                    "line": 8,
                    "character": 19
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Return type, \"list[dict[str, Unknown | str]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 9,
                    "character": 11
                },
                "end": {
                    "line": 9,
                    "character": 56
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Type of \"i\" is unknown",
            "range": {
                "start": {
                    "line": 9,
                    "character": 47
                },
                "end": {
                    "line": 9,
                    "character": 48
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Type of parameter \"query\" is unknown",
            "range": {
                "start": {
                    "line": 15,
                    "character": 20
                },
                "end": {
                    "line": 15,
                    "character": 25
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"query\"",
            "range": {
                "start": {
                    "line": 15,
                    "character": 20
                },
                "end": {
                    "line": 15,
                    "character": 25
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Type of parameter \"texts\" is unknown",
            "range": {
                "start": {
                    "line": 15,
                    "character": 27
                },
                "end": {
                    "line": 15,
                    "character": 32
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"texts\"",
            "range": {
                "start": {
                    "line": 15,
                    "character": 27
                },
                "end": {
                    "line": 15,
                    "character": 32
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Type of parameter \"query\" is unknown",
            "range": {
                "start": {
                    "line": 28,
                    "character": 20
                },
                "end": {
                    "line": 28,
                    "character": 25
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"query\"",
            "range": {
                "start": {
                    "line": 28,
                    "character": 20
                },
                "end": {
                    "line": 28,
                    "character": 25
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Type of parameter \"texts\" is unknown",
            "range": {
                "start": {
                    "line": 28,
                    "character": 27
                },
                "end": {
                    "line": 28,
                    "character": 32
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"texts\"",
            "range": {
                "start": {
                    "line": 28,
                    "character": 27
                },
                "end": {
                    "line": 28,
                    "character": 32
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Type of \"_\" is unknown",
            "range": {
                "start": {
                    "line": 30,
                    "character": 24
                },
                "end": {
                    "line": 30,
                    "character": 25
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Type of parameter \"benchmark\" is unknown",
            "range": {
                "start": {
                    "line": 46,
                    "character": 28
                },
                "end": {
                    "line": 46,
                    "character": 37
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"benchmark\"",
            "range": {
                "start": {
                    "line": 46,
                    "character": 28
                },
                "end": {
                    "line": 46,
                    "character": 37
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Type of parameter \"q\" is unknown",
            "range": {
                "start": {
                    "line": 49,
                    "character": 20
                },
                "end": {
                    "line": 49,
                    "character": 21
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"q\"",
            "range": {
                "start": {
                    "line": 49,
                    "character": 20
                },
                "end": {
                    "line": 49,
                    "character": 21
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Type of parameter \"texts\" is unknown",
            "range": {
                "start": {
                    "line": 49,
                    "character": 23
                },
                "end": {
                    "line": 49,
                    "character": 28
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"texts\"",
            "range": {
                "start": {
                    "line": 49,
                    "character": 23
                },
                "end": {
                    "line": 49,
                    "character": 28
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_reranker.py",
            "severity": "error",
            "message": "Type of \"_\" is unknown",
            "range": {
                "start": {
                    "line": 50,
                    "character": 24
                },
                "end": {
                    "line": 50,
                    "character": 25
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ranking/test_rrf.py",
            "severity": "error",
            "message": "Import \"pytest\" is not accessed",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 13
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/conftest.py",
            "severity": "error",
            "message": "Type of parameter \"args\" is unknown",
            "range": {
                "start": {
                    "line": 7,
                    "character": 24
                },
                "end": {
                    "line": 7,
                    "character": 28
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/conftest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"args\"",
            "range": {
                "start": {
                    "line": 7,
                    "character": 24
                },
                "end": {
                    "line": 7,
                    "character": 28
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/conftest.py",
            "severity": "error",
            "message": "Type of parameter \"kwargs\" is unknown",
            "range": {
                "start": {
                    "line": 7,
                    "character": 32
                },
                "end": {
                    "line": 7,
                    "character": 38
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/conftest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"kwargs\"",
            "range": {
                "start": {
                    "line": 7,
                    "character": 32
                },
                "end": {
                    "line": 7,
                    "character": 38
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/conftest.py",
            "severity": "error",
            "message": "Return type, \"list[Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 11,
                    "character": 4
                },
                "end": {
                    "line": 11,
                    "character": 10
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/conftest.py",
            "severity": "error",
            "message": "Type of parameter \"self\" is unknown",
            "range": {
                "start": {
                    "line": 11,
                    "character": 11
                },
                "end": {
                    "line": 11,
                    "character": 15
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/conftest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"self\"",
            "range": {
                "start": {
                    "line": 11,
                    "character": 11
                },
                "end": {
                    "line": 11,
                    "character": 15
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/conftest.py",
            "severity": "error",
            "message": "Type of parameter \"args\" is unknown",
            "range": {
                "start": {
                    "line": 11,
                    "character": 18
                },
                "end": {
                    "line": 11,
                    "character": 22
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/conftest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"args\"",
            "range": {
                "start": {
                    "line": 11,
                    "character": 18
                },
                "end": {
                    "line": 11,
                    "character": 22
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/conftest.py",
            "severity": "error",
            "message": "Type of parameter \"kwargs\" is unknown",
            "range": {
                "start": {
                    "line": 11,
                    "character": 26
                },
                "end": {
                    "line": 11,
                    "character": 32
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/conftest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"kwargs\"",
            "range": {
                "start": {
                    "line": 11,
                    "character": 26
                },
                "end": {
                    "line": 11,
                    "character": 32
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/conftest.py",
            "severity": "error",
            "message": "Return type, \"list[Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 12,
                    "character": 11
                },
                "end": {
                    "line": 12,
                    "character": 13
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/conftest.py",
            "severity": "error",
            "message": "Cannot assign to attribute \"encode\" for class \"type[SentenceTransformer]\"\n  Attribute \"encode\" is unknown",
            "range": {
                "start": {
                    "line": 15,
                    "character": 20
                },
                "end": {
                    "line": 15,
                    "character": 26
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/conftest.py",
            "severity": "error",
            "message": "Cannot assign to attribute \"SentenceTransformer\" for class \"ModuleType\"\n  Attribute \"SentenceTransformer\" is unknown",
            "range": {
                "start": {
                    "line": 16,
                    "character": 5
                },
                "end": {
                    "line": 16,
                    "character": 24
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Type of parameter \"vectors\" is unknown",
            "range": {
                "start": {
                    "line": 19,
                    "character": 49
                },
                "end": {
                    "line": 19,
                    "character": 56
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"vectors\"",
            "range": {
                "start": {
                    "line": 19,
                    "character": 49
                },
                "end": {
                    "line": 19,
                    "character": 56
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Type of \"vectors\" is partially unknown\n  Type of \"vectors\" is \"list[Unknown]\"",
            "range": {
                "start": {
                    "line": 20,
                    "character": 8
                },
                "end": {
                    "line": 20,
                    "character": 20
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Type of \"extend\" is partially unknown\n  Type of \"extend\" is \"(iterable: Iterable[Unknown], /) -> None\"",
            "range": {
                "start": {
                    "line": 20,
                    "character": 8
                },
                "end": {
                    "line": 20,
                    "character": 27
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"iterable\" in function \"extend\"",
            "range": {
                "start": {
                    "line": 20,
                    "character": 28
                },
                "end": {
                    "line": 20,
                    "character": 35
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Type of parameter \"mock_model\" is unknown",
            "range": {
                "start": {
                    "line": 24,
                    "character": 39
                },
                "end": {
                    "line": 24,
                    "character": 49
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"mock_model\"",
            "range": {
                "start": {
                    "line": 24,
                    "character": 39
                },
                "end": {
                    "line": 24,
                    "character": 49
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Argument of type \"MockPineconeClient\" cannot be assigned to parameter \"pinecone_client\" of type \"PineconeClient\" in function \"__init__\"\n  \"MockPineconeClient\" is not assignable to \"PineconeClient\"",
            "range": {
                "start": {
                    "line": 32,
                    "character": 31
                },
                "end": {
                    "line": 32,
                    "character": 37
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Type of parameter \"mock_model\" is unknown",
            "range": {
                "start": {
                    "line": 39,
                    "character": 38
                },
                "end": {
                    "line": 39,
                    "character": 48
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"mock_model\"",
            "range": {
                "start": {
                    "line": 39,
                    "character": 38
                },
                "end": {
                    "line": 39,
                    "character": 48
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Type of parameter \"texts\" is unknown",
            "range": {
                "start": {
                    "line": 44,
                    "character": 18
                },
                "end": {
                    "line": 44,
                    "character": 23
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"texts\"",
            "range": {
                "start": {
                    "line": 44,
                    "character": 18
                },
                "end": {
                    "line": 44,
                    "character": 23
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Type of parameter \"batch_size\" is unknown",
            "range": {
                "start": {
                    "line": 44,
                    "character": 25
                },
                "end": {
                    "line": 44,
                    "character": 35
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"batch_size\"",
            "range": {
                "start": {
                    "line": 44,
                    "character": 25
                },
                "end": {
                    "line": 44,
                    "character": 35
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Type of parameter \"show_progress_bar\" is unknown",
            "range": {
                "start": {
                    "line": 44,
                    "character": 37
                },
                "end": {
                    "line": 44,
                    "character": 54
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"show_progress_bar\"",
            "range": {
                "start": {
                    "line": 44,
                    "character": 37
                },
                "end": {
                    "line": 44,
                    "character": 54
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"obj\" in function \"len\"",
            "range": {
                "start": {
                    "line": 45,
                    "character": 29
                },
                "end": {
                    "line": 45,
                    "character": 34
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Argument of type \"MockPineconeClient\" cannot be assigned to parameter \"pinecone_client\" of type \"PineconeClient\" in function \"__init__\"\n  \"MockPineconeClient\" is not assignable to \"PineconeClient\"",
            "range": {
                "start": {
                    "line": 51,
                    "character": 31
                },
                "end": {
                    "line": 51,
                    "character": 37
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Type of \"vectors\" is partially unknown\n  Type of \"vectors\" is \"list[Unknown]\"",
            "range": {
                "start": {
                    "line": 57,
                    "character": 15
                },
                "end": {
                    "line": 57,
                    "character": 29
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"obj\" in function \"len\"\n  Argument type is \"list[Unknown]\"",
            "range": {
                "start": {
                    "line": 57,
                    "character": 15
                },
                "end": {
                    "line": 57,
                    "character": 29
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Type of parameter \"mock_model\" is unknown",
            "range": {
                "start": {
                    "line": 61,
                    "character": 37
                },
                "end": {
                    "line": 61,
                    "character": 47
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"mock_model\"",
            "range": {
                "start": {
                    "line": 61,
                    "character": 37
                },
                "end": {
                    "line": 61,
                    "character": 47
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Argument of type \"MockPineconeClient\" cannot be assigned to parameter \"pinecone_client\" of type \"PineconeClient\" in function \"__init__\"\n  \"MockPineconeClient\" is not assignable to \"PineconeClient\"",
            "range": {
                "start": {
                    "line": 67,
                    "character": 31
                },
                "end": {
                    "line": 67,
                    "character": 37
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Type of \"assert_called_with\" is unknown",
            "range": {
                "start": {
                    "line": 69,
                    "character": 4
                },
                "end": {
                    "line": 69,
                    "character": 33
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_dense.py",
            "severity": "error",
            "message": "Argument of type \"MockPineconeClient\" cannot be assigned to parameter \"pinecone_client\" of type \"PineconeClient\" in function \"__init__\"\n  \"MockPineconeClient\" is not assignable to \"PineconeClient\"",
            "range": {
                "start": {
                    "line": 87,
                    "character": 35
                },
                "end": {
                    "line": 87,
                    "character": 41
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid.py",
            "severity": "error",
            "message": "Import \"pytest\" is not accessed",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 13
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid.py",
            "severity": "error",
            "message": "Type of parameter \"query\" is unknown",
            "range": {
                "start": {
                    "line": 7,
                    "character": 20
                },
                "end": {
                    "line": 7,
                    "character": 25
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"query\"",
            "range": {
                "start": {
                    "line": 7,
                    "character": 20
                },
                "end": {
                    "line": 7,
                    "character": 25
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"top_k\"",
            "range": {
                "start": {
                    "line": 7,
                    "character": 27
                },
                "end": {
                    "line": 7,
                    "character": 32
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid.py",
            "severity": "error",
            "message": "Type of parameter \"query\" is unknown",
            "range": {
                "start": {
                    "line": 12,
                    "character": 20
                },
                "end": {
                    "line": 12,
                    "character": 25
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"query\"",
            "range": {
                "start": {
                    "line": 12,
                    "character": 20
                },
                "end": {
                    "line": 12,
                    "character": 25
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"top_k\"",
            "range": {
                "start": {
                    "line": 12,
                    "character": 27
                },
                "end": {
                    "line": 12,
                    "character": 32
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid.py",
            "severity": "error",
            "message": "Argument of type \"StubDense\" cannot be assigned to parameter \"dense_retriever\" of type \"DenseRetriever\" in function \"__init__\"\n  \"StubDense\" is not assignable to \"DenseRetriever\"",
            "range": {
                "start": {
                    "line": 17,
                    "character": 29
                },
                "end": {
                    "line": 17,
                    "character": 40
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid.py",
            "severity": "error",
            "message": "Argument of type \"StubLexical\" cannot be assigned to parameter \"lexical_retriever\" of type \"LexicalBM25\" in function \"__init__\"\n  \"StubLexical\" is not assignable to \"LexicalBM25\"",
            "range": {
                "start": {
                    "line": 17,
                    "character": 42
                },
                "end": {
                    "line": 17,
                    "character": 55
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid.py",
            "severity": "error",
            "message": "Argument of type \"StubDense\" cannot be assigned to parameter \"dense_retriever\" of type \"DenseRetriever\" in function \"__init__\"\n  \"StubDense\" is not assignable to \"DenseRetriever\"",
            "range": {
                "start": {
                    "line": 27,
                    "character": 29
                },
                "end": {
                    "line": 27,
                    "character": 40
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid.py",
            "severity": "error",
            "message": "Argument of type \"StubLexical\" cannot be assigned to parameter \"lexical_retriever\" of type \"LexicalBM25\" in function \"__init__\"\n  \"StubLexical\" is not assignable to \"LexicalBM25\"",
            "range": {
                "start": {
                    "line": 27,
                    "character": 42
                },
                "end": {
                    "line": 27,
                    "character": 55
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid.py",
            "severity": "error",
            "message": "Argument of type \"StubDense\" cannot be assigned to parameter \"dense_retriever\" of type \"DenseRetriever\" in function \"__init__\"\n  \"StubDense\" is not assignable to \"DenseRetriever\"",
            "range": {
                "start": {
                    "line": 39,
                    "character": 27
                },
                "end": {
                    "line": 39,
                    "character": 38
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Import \"pytest\" is not accessed",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 13
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Return type, \"tuple[list[tuple[str, float]], dict[Unknown, Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 7,
                    "character": 8
                },
                "end": {
                    "line": 7,
                    "character": 13
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Type of parameter \"query\" is unknown",
            "range": {
                "start": {
                    "line": 7,
                    "character": 20
                },
                "end": {
                    "line": 7,
                    "character": 25
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"query\"",
            "range": {
                "start": {
                    "line": 7,
                    "character": 20
                },
                "end": {
                    "line": 7,
                    "character": 25
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"top_k\"",
            "range": {
                "start": {
                    "line": 7,
                    "character": 27
                },
                "end": {
                    "line": 7,
                    "character": 32
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Return type, \"tuple[list[tuple[str, float]], dict[Unknown, Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 8,
                    "character": 15
                },
                "end": {
                    "line": 8,
                    "character": 43
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Return type, \"tuple[list[tuple[str, float]], dict[Unknown, Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 16,
                    "character": 8
                },
                "end": {
                    "line": 16,
                    "character": 13
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Type of parameter \"query\" is unknown",
            "range": {
                "start": {
                    "line": 16,
                    "character": 20
                },
                "end": {
                    "line": 16,
                    "character": 25
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"query\"",
            "range": {
                "start": {
                    "line": 16,
                    "character": 20
                },
                "end": {
                    "line": 16,
                    "character": 25
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"top_k\"",
            "range": {
                "start": {
                    "line": 16,
                    "character": 27
                },
                "end": {
                    "line": 16,
                    "character": 32
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Return type, \"tuple[list[tuple[str, float]], dict[Unknown, Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 17,
                    "character": 15
                },
                "end": {
                    "line": 17,
                    "character": 43
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Return type, \"tuple[list[Unknown], dict[str, bool | int]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 21,
                    "character": 8
                },
                "end": {
                    "line": 21,
                    "character": 14
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Type of parameter \"query\" is unknown",
            "range": {
                "start": {
                    "line": 21,
                    "character": 21
                },
                "end": {
                    "line": 21,
                    "character": 26
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"query\"",
            "range": {
                "start": {
                    "line": 21,
                    "character": 21
                },
                "end": {
                    "line": 21,
                    "character": 26
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Type of parameter \"docs\" is unknown",
            "range": {
                "start": {
                    "line": 21,
                    "character": 28
                },
                "end": {
                    "line": 21,
                    "character": 32
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"docs\"",
            "range": {
                "start": {
                    "line": 21,
                    "character": 28
                },
                "end": {
                    "line": 21,
                    "character": 32
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"top_k\"",
            "range": {
                "start": {
                    "line": 21,
                    "character": 34
                },
                "end": {
                    "line": 21,
                    "character": 39
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"session_id\"",
            "range": {
                "start": {
                    "line": 21,
                    "character": 43
                },
                "end": {
                    "line": 21,
                    "character": 53
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"timeout\"",
            "range": {
                "start": {
                    "line": 21,
                    "character": 65
                },
                "end": {
                    "line": 21,
                    "character": 72
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Type of \"docs\" is partially unknown\n  Type of \"docs\" is \"list[Unknown]\"",
            "range": {
                "start": {
                    "line": 22,
                    "character": 8
                },
                "end": {
                    "line": 22,
                    "character": 12
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"iterable\" in function \"__init__\"\n  Argument type is \"Iterator[Unknown]\"",
            "range": {
                "start": {
                    "line": 22,
                    "character": 20
                },
                "end": {
                    "line": 22,
                    "character": 34
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"sequence\" in function \"__new__\"",
            "range": {
                "start": {
                    "line": 22,
                    "character": 29
                },
                "end": {
                    "line": 22,
                    "character": 33
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Return type, \"tuple[list[Unknown], dict[str, bool | int]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 23,
                    "character": 15
                },
                "end": {
                    "line": 23,
                    "character": 64
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Argument of type \"StubDense\" cannot be assigned to parameter \"dense_retriever\" of type \"DenseRetriever\" in function \"__init__\"\n  \"StubDense\" is not assignable to \"DenseRetriever\"",
            "range": {
                "start": {
                    "line": 28,
                    "character": 8
                },
                "end": {
                    "line": 28,
                    "character": 19
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Argument of type \"StubLexical\" cannot be assigned to parameter \"lexical_retriever\" of type \"LexicalBM25\" in function \"__init__\"\n  \"StubLexical\" is not assignable to \"LexicalBM25\"",
            "range": {
                "start": {
                    "line": 29,
                    "character": 8
                },
                "end": {
                    "line": 29,
                    "character": 21
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_hybrid_rerank.py",
            "severity": "error",
            "message": "Argument of type \"StubReranker\" cannot be assigned to parameter \"reranker\" of type \"CrossEncoderReranker | None\" in function \"__init__\"\n  Type \"StubReranker\" is not assignable to type \"CrossEncoderReranker | None\"\n    \"StubReranker\" is not assignable to \"CrossEncoderReranker\"\n    \"StubReranker\" is not assignable to \"None\"",
            "range": {
                "start": {
                    "line": 30,
                    "character": 17
                },
                "end": {
                    "line": 30,
                    "character": 31
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_lexical.py",
            "severity": "error",
            "message": "Import \"pytest\" is not accessed",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 13
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_query_analysis.py",
            "severity": "error",
            "message": "Import \"pytest\" is not accessed",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 13
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_query_analysis.py",
            "severity": "error",
            "message": "Argument of type \"DummyLexical\" cannot be assigned to parameter \"lexical\" of type \"LexicalBM25\" in function \"analyze_query\"\n  \"DummyLexical\" is not assignable to \"LexicalBM25\"",
            "range": {
                "start": {
                    "line": 15,
                    "character": 49
                },
                "end": {
                    "line": 15,
                    "character": 56
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_retrieval/test_query_analysis.py",
            "severity": "error",
            "message": "Argument of type \"DummyLexical\" cannot be assigned to parameter \"lexical\" of type \"LexicalBM25\" in function \"analyze_query\"\n  \"DummyLexical\" is not assignable to \"LexicalBM25\"",
            "range": {
                "start": {
                    "line": 23,
                    "character": 45
                },
                "end": {
                    "line": 23,
                    "character": 52
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "warning",
            "message": "Import \"fpdf\" could not be resolved from source",
            "range": {
                "start": {
                    "line": 32,
                    "character": 9
                },
                "end": {
                    "line": 32,
                    "character": 13
                }
            },
            "rule": "reportMissingModuleSource"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "No parameter named \"txt\"",
            "range": {
                "start": {
                    "line": 37,
                    "character": 22
                },
                "end": {
                    "line": 37,
                    "character": 25
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "No overloads for \"output\" match the provided arguments",
            "range": {
                "start": {
                    "line": 38,
                    "character": 4
                },
                "end": {
                    "line": 38,
                    "character": 20
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Argument of type \"Path\" cannot be assigned to parameter \"name\" of type \"str\" in function \"output\"\n  \"Path\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 38,
                    "character": 15
                },
                "end": {
                    "line": 38,
                    "character": 19
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Argument of type \"Path\" cannot be assigned to parameter \"path_or_stream\" of type \"str | IO[bytes]\" in function \"save\"\n  Type \"Path\" is not assignable to type \"str | IO[bytes]\"\n    \"Path\" is not assignable to \"str\"\n    \"Path\" is not assignable to \"IO[bytes]\"",
            "range": {
                "start": {
                    "line": 46,
                    "character": 13
                },
                "end": {
                    "line": 46,
                    "character": 17
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of parameter \"mocks\" is unknown",
            "range": {
                "start": {
                    "line": 49,
                    "character": 47
                },
                "end": {
                    "line": 49,
                    "character": 52
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"mocks\"",
            "range": {
                "start": {
                    "line": 49,
                    "character": 47
                },
                "end": {
                    "line": 49,
                    "character": 52
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"dense\" is unknown",
            "range": {
                "start": {
                    "line": 50,
                    "character": 4
                },
                "end": {
                    "line": 50,
                    "character": 9
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"lexical\" is unknown",
            "range": {
                "start": {
                    "line": 50,
                    "character": 11
                },
                "end": {
                    "line": 50,
                    "character": 18
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"dense_retriever\" in function \"__init__\"",
            "range": {
                "start": {
                    "line": 51,
                    "character": 30
                },
                "end": {
                    "line": 51,
                    "character": 35
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"lexical_retriever\" in function \"__init__\"",
            "range": {
                "start": {
                    "line": 51,
                    "character": 37
                },
                "end": {
                    "line": 51,
                    "character": 44
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of parameter \"mocks\" is unknown",
            "range": {
                "start": {
                    "line": 77,
                    "character": 42
                },
                "end": {
                    "line": 77,
                    "character": 47
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"mocks\"",
            "range": {
                "start": {
                    "line": 77,
                    "character": 42
                },
                "end": {
                    "line": 77,
                    "character": 47
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"dense\" is unknown",
            "range": {
                "start": {
                    "line": 78,
                    "character": 4
                },
                "end": {
                    "line": 78,
                    "character": 9
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"lexical\" is unknown",
            "range": {
                "start": {
                    "line": 78,
                    "character": 11
                },
                "end": {
                    "line": 78,
                    "character": 18
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"dense_retriever\" in function \"__init__\"",
            "range": {
                "start": {
                    "line": 79,
                    "character": 30
                },
                "end": {
                    "line": 79,
                    "character": 35
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"lexical_retriever\" in function \"__init__\"",
            "range": {
                "start": {
                    "line": 79,
                    "character": 37
                },
                "end": {
                    "line": 79,
                    "character": 44
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"index_corpus\" is unknown",
            "range": {
                "start": {
                    "line": 85,
                    "character": 11
                },
                "end": {
                    "line": 85,
                    "character": 29
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"call_args\" is unknown",
            "range": {
                "start": {
                    "line": 85,
                    "character": 11
                },
                "end": {
                    "line": 85,
                    "character": 39
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"index_documents\" is unknown",
            "range": {
                "start": {
                    "line": 86,
                    "character": 11
                },
                "end": {
                    "line": 86,
                    "character": 34
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"call_args\" is unknown",
            "range": {
                "start": {
                    "line": 86,
                    "character": 11
                },
                "end": {
                    "line": 86,
                    "character": 44
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of parameter \"mocks\" is unknown",
            "range": {
                "start": {
                    "line": 92,
                    "character": 50
                },
                "end": {
                    "line": 92,
                    "character": 55
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"mocks\"",
            "range": {
                "start": {
                    "line": 92,
                    "character": 50
                },
                "end": {
                    "line": 92,
                    "character": 55
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"dense\" is unknown",
            "range": {
                "start": {
                    "line": 93,
                    "character": 4
                },
                "end": {
                    "line": 93,
                    "character": 9
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"lexical\" is unknown",
            "range": {
                "start": {
                    "line": 93,
                    "character": 11
                },
                "end": {
                    "line": 93,
                    "character": 18
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"dense_retriever\" in function \"__init__\"",
            "range": {
                "start": {
                    "line": 94,
                    "character": 30
                },
                "end": {
                    "line": 94,
                    "character": 35
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"lexical_retriever\" in function \"__init__\"",
            "range": {
                "start": {
                    "line": 94,
                    "character": 37
                },
                "end": {
                    "line": 94,
                    "character": 44
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of parameter \"mocks\" is unknown",
            "range": {
                "start": {
                    "line": 108,
                    "character": 33
                },
                "end": {
                    "line": 108,
                    "character": 38
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"mocks\"",
            "range": {
                "start": {
                    "line": 108,
                    "character": 33
                },
                "end": {
                    "line": 108,
                    "character": 38
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"dense\" is unknown",
            "range": {
                "start": {
                    "line": 109,
                    "character": 4
                },
                "end": {
                    "line": 109,
                    "character": 9
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"lexical\" is unknown",
            "range": {
                "start": {
                    "line": 109,
                    "character": 11
                },
                "end": {
                    "line": 109,
                    "character": 18
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"dense_retriever\" in function \"__init__\"",
            "range": {
                "start": {
                    "line": 110,
                    "character": 30
                },
                "end": {
                    "line": 110,
                    "character": 35
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"lexical_retriever\" in function \"__init__\"",
            "range": {
                "start": {
                    "line": 110,
                    "character": 37
                },
                "end": {
                    "line": 110,
                    "character": 44
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"update_document\" is unknown",
            "range": {
                "start": {
                    "line": 115,
                    "character": 4
                },
                "end": {
                    "line": 115,
                    "character": 25
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"assert_called_with\" is unknown",
            "range": {
                "start": {
                    "line": 115,
                    "character": 4
                },
                "end": {
                    "line": 115,
                    "character": 44
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"update_document\" is unknown",
            "range": {
                "start": {
                    "line": 116,
                    "character": 4
                },
                "end": {
                    "line": 116,
                    "character": 27
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"assert_called_with\" is unknown",
            "range": {
                "start": {
                    "line": 116,
                    "character": 4
                },
                "end": {
                    "line": 116,
                    "character": 46
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"delete_document\" is unknown",
            "range": {
                "start": {
                    "line": 117,
                    "character": 4
                },
                "end": {
                    "line": 117,
                    "character": 25
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"assert_called_with\" is unknown",
            "range": {
                "start": {
                    "line": 117,
                    "character": 4
                },
                "end": {
                    "line": 117,
                    "character": 44
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"delete_document\" is unknown",
            "range": {
                "start": {
                    "line": 118,
                    "character": 4
                },
                "end": {
                    "line": 118,
                    "character": 27
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"assert_called_with\" is unknown",
            "range": {
                "start": {
                    "line": 118,
                    "character": 4
                },
                "end": {
                    "line": 118,
                    "character": 46
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of parameter \"mocks\" is unknown",
            "range": {
                "start": {
                    "line": 124,
                    "character": 31
                },
                "end": {
                    "line": 124,
                    "character": 36
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"mocks\"",
            "range": {
                "start": {
                    "line": 124,
                    "character": 31
                },
                "end": {
                    "line": 124,
                    "character": 36
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"dense\" is unknown",
            "range": {
                "start": {
                    "line": 125,
                    "character": 4
                },
                "end": {
                    "line": 125,
                    "character": 9
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"lexical\" is unknown",
            "range": {
                "start": {
                    "line": 125,
                    "character": 11
                },
                "end": {
                    "line": 125,
                    "character": 18
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"dense_retriever\" in function \"__init__\"",
            "range": {
                "start": {
                    "line": 126,
                    "character": 30
                },
                "end": {
                    "line": 126,
                    "character": 35
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"lexical_retriever\" in function \"__init__\"",
            "range": {
                "start": {
                    "line": 126,
                    "character": 37
                },
                "end": {
                    "line": 126,
                    "character": 44
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"update_document\" is unknown",
            "range": {
                "start": {
                    "line": 134,
                    "character": 4
                },
                "end": {
                    "line": 134,
                    "character": 25
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"assert_called_with\" is unknown",
            "range": {
                "start": {
                    "line": 134,
                    "character": 4
                },
                "end": {
                    "line": 134,
                    "character": 44
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"update_document\" is unknown",
            "range": {
                "start": {
                    "line": 135,
                    "character": 4
                },
                "end": {
                    "line": 135,
                    "character": 27
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"assert_called_with\" is unknown",
            "range": {
                "start": {
                    "line": 135,
                    "character": 4
                },
                "end": {
                    "line": 135,
                    "character": 46
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"delete_document\" is unknown",
            "range": {
                "start": {
                    "line": 136,
                    "character": 4
                },
                "end": {
                    "line": 136,
                    "character": 25
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"assert_called_with\" is unknown",
            "range": {
                "start": {
                    "line": 136,
                    "character": 4
                },
                "end": {
                    "line": 136,
                    "character": 44
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"delete_document\" is unknown",
            "range": {
                "start": {
                    "line": 137,
                    "character": 4
                },
                "end": {
                    "line": 137,
                    "character": 27
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_document_service.py",
            "severity": "error",
            "message": "Type of \"assert_called_with\" is unknown",
            "range": {
                "start": {
                    "line": 137,
                    "character": 4
                },
                "end": {
                    "line": 137,
                    "character": 46
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_index_management.py",
            "severity": "error",
            "message": "Import \"pytest\" is not accessed",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 13
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_index_management.py",
            "severity": "error",
            "message": "Argument of type \"DummyDense\" cannot be assigned to parameter \"dense\" of type \"DenseRetriever\" in function \"__init__\"\n  \"DummyDense\" is not assignable to \"DenseRetriever\"",
            "range": {
                "start": {
                    "line": 46,
                    "character": 27
                },
                "end": {
                    "line": 46,
                    "character": 39
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_services/test_index_management.py",
            "severity": "error",
            "message": "Argument of type \"DummyLexical\" cannot be assigned to parameter \"lexical\" of type \"LexicalBM25\" in function \"__init__\"\n  \"DummyLexical\" is not assignable to \"LexicalBM25\"",
            "range": {
                "start": {
                    "line": 46,
                    "character": 41
                },
                "end": {
                    "line": 46,
                    "character": 55
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_chat.py",
            "severity": "error",
            "message": "Import \"pytest\" is not accessed",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 13
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_chat.py",
            "severity": "error",
            "message": "\"_append_history\" is private and used outside of the module in which it is declared",
            "range": {
                "start": {
                    "line": 9,
                    "character": 4
                },
                "end": {
                    "line": 9,
                    "character": 19
                }
            },
            "rule": "reportPrivateUsage"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_chat.py",
            "severity": "error",
            "message": "\"_generate_response\" is private and used outside of the module in which it is declared",
            "range": {
                "start": {
                    "line": 10,
                    "character": 4
                },
                "end": {
                    "line": 10,
                    "character": 22
                }
            },
            "rule": "reportPrivateUsage"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_chat.py",
            "severity": "error",
            "message": "\"_sanitize\" is private and used outside of the module in which it is declared",
            "range": {
                "start": {
                    "line": 11,
                    "character": 4
                },
                "end": {
                    "line": 11,
                    "character": 13
                }
            },
            "rule": "reportPrivateUsage"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_chat.py",
            "severity": "error",
            "message": "\"chat\" is possibly unbound",
            "range": {
                "start": {
                    "line": 40,
                    "character": 8
                },
                "end": {
                    "line": 40,
                    "character": 12
                }
            },
            "rule": "reportPossiblyUnboundVariable"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_chat.py",
            "severity": "error",
            "message": "Cannot assign to attribute \"evaluate\" for class \"RagasEvaluator\"\n  Type \"(*_: Unknown, **__: Unknown) -> None\" is not assignable to type \"(query: str, answer: str, contexts: List[str]) -> EvaluationResult\"\n    Function return type \"None\" is incompatible with type \"EvaluationResult\"\n      \"None\" is not assignable to \"EvaluationResult\"",
            "range": {
                "start": {
                    "line": 51,
                    "character": 30
                },
                "end": {
                    "line": 51,
                    "character": 51
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_chat.py",
            "severity": "error",
            "message": "Type of parameter \"_\" is partially unknown",
            "range": {
                "start": {
                    "line": 51,
                    "character": 38
                },
                "end": {
                    "line": 51,
                    "character": 39
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_chat.py",
            "severity": "error",
            "message": "Type of parameter \"__\" is partially unknown",
            "range": {
                "start": {
                    "line": 51,
                    "character": 43
                },
                "end": {
                    "line": 51,
                    "character": 45
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_chat.py",
            "severity": "error",
            "message": "Type of parameter \"query\" is unknown",
            "range": {
                "start": {
                    "line": 54,
                    "character": 24
                },
                "end": {
                    "line": 54,
                    "character": 29
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_chat.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"query\"",
            "range": {
                "start": {
                    "line": 54,
                    "character": 24
                },
                "end": {
                    "line": 54,
                    "character": 29
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_chat.py",
            "severity": "error",
            "message": "Type of parameter \"mode\" is partially unknown\n  Parameter type is \"Unknown | None\"",
            "range": {
                "start": {
                    "line": 54,
                    "character": 31
                },
                "end": {
                    "line": 54,
                    "character": 35
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_chat.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"mode\"",
            "range": {
                "start": {
                    "line": 54,
                    "character": 31
                },
                "end": {
                    "line": 54,
                    "character": 35
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_chat.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"top_k\"",
            "range": {
                "start": {
                    "line": 54,
                    "character": 42
                },
                "end": {
                    "line": 54,
                    "character": 47
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_evaluate.py",
            "severity": "error",
            "message": "\"_load_dashboard\" is private and used outside of the module in which it is declared",
            "range": {
                "start": {
                    "line": 9,
                    "character": 39
                },
                "end": {
                    "line": 9,
                    "character": 54
                }
            },
            "rule": "reportPrivateUsage"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_evaluate.py",
            "severity": "error",
            "message": "Type of parameter \"start\" is unknown",
            "range": {
                "start": {
                    "line": 60,
                    "character": 18
                },
                "end": {
                    "line": 60,
                    "character": 23
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_evaluate.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"start\"",
            "range": {
                "start": {
                    "line": 60,
                    "character": 18
                },
                "end": {
                    "line": 60,
                    "character": 23
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_evaluate.py",
            "severity": "error",
            "message": "Type of parameter \"end\" is unknown",
            "range": {
                "start": {
                    "line": 60,
                    "character": 25
                },
                "end": {
                    "line": 60,
                    "character": 28
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_evaluate.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"end\"",
            "range": {
                "start": {
                    "line": 60,
                    "character": 25
                },
                "end": {
                    "line": 60,
                    "character": 28
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_evaluate.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"value\" in function \"setattr\"\n  Argument type is \"(start: Unknown, end: Unknown) -> list[EvaluationResult]\"",
            "range": {
                "start": {
                    "line": 65,
                    "character": 51
                },
                "end": {
                    "line": 65,
                    "character": 60
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_evaluate.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"value\" in function \"setattr\"\n  Argument type is \"(s: Unknown, e: Unknown) -> list[EvaluationResult]\"",
            "range": {
                "start": {
                    "line": 114,
                    "character": 51
                },
                "end": {
                    "line": 114,
                    "character": 71
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_evaluate.py",
            "severity": "error",
            "message": "Type of parameter \"s\" is unknown",
            "range": {
                "start": {
                    "line": 114,
                    "character": 58
                },
                "end": {
                    "line": 114,
                    "character": 59
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_evaluate.py",
            "severity": "error",
            "message": "Type of parameter \"e\" is unknown",
            "range": {
                "start": {
                    "line": 114,
                    "character": 61
                },
                "end": {
                    "line": 114,
                    "character": 62
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_evaluate.py",
            "severity": "error",
            "message": "Type of parameter \"key\" is unknown",
            "range": {
                "start": {
                    "line": 119,
                    "character": 17
                },
                "end": {
                    "line": 119,
                    "character": 20
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_evaluate.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"key\"",
            "range": {
                "start": {
                    "line": 119,
                    "character": 17
                },
                "end": {
                    "line": 119,
                    "character": 20
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_evaluate.py",
            "severity": "error",
            "message": "Type of parameter \"default\" is partially unknown\n  Parameter type is \"Unknown | None\"",
            "range": {
                "start": {
                    "line": 119,
                    "character": 22
                },
                "end": {
                    "line": 119,
                    "character": 29
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_evaluate.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"default\"",
            "range": {
                "start": {
                    "line": 119,
                    "character": 22
                },
                "end": {
                    "line": 119,
                    "character": 29
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_evaluate.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"key\" in function \"get\"",
            "range": {
                "start": {
                    "line": 122,
                    "character": 24
                },
                "end": {
                    "line": 122,
                    "character": 27
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_evaluate.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"default\" in function \"get\"\n  Argument type is \"Unknown | None\"",
            "range": {
                "start": {
                    "line": 122,
                    "character": 29
                },
                "end": {
                    "line": 122,
                    "character": 36
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_evaluate.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"value\" in function \"setattr\"\n  Argument type is \"(key: Unknown, default: Unknown | None = None) -> (dict[str, float] | Any)\"",
            "range": {
                "start": {
                    "line": 124,
                    "character": 47
                },
                "end": {
                    "line": 124,
                    "character": 55
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_gradio_integration.py",
            "severity": "error",
            "message": "Import \"gradio.testing\" could not be resolved",
            "range": {
                "start": {
                    "line": 7,
                    "character": 9
                },
                "end": {
                    "line": 7,
                    "character": 23
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_gradio_integration.py",
            "severity": "error",
            "message": "Type of \"TestClient\" is unknown",
            "range": {
                "start": {
                    "line": 7,
                    "character": 31
                },
                "end": {
                    "line": 7,
                    "character": 41
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_gradio_integration.py",
            "severity": "error",
            "message": "Type of \"client\" is unknown",
            "range": {
                "start": {
                    "line": 14,
                    "character": 4
                },
                "end": {
                    "line": 14,
                    "character": 10
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_gradio_integration.py",
            "severity": "error",
            "message": "Object of type \"None\" cannot be called",
            "range": {
                "start": {
                    "line": 14,
                    "character": 13
                },
                "end": {
                    "line": 14,
                    "character": 36
                }
            },
            "rule": "reportOptionalCall"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_gradio_integration.py",
            "severity": "error",
            "message": "Type of \"result\" is unknown",
            "range": {
                "start": {
                    "line": 15,
                    "character": 4
                },
                "end": {
                    "line": 15,
                    "character": 10
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_gradio_integration.py",
            "severity": "error",
            "message": "Type of \"chat\" is unknown",
            "range": {
                "start": {
                    "line": 15,
                    "character": 13
                },
                "end": {
                    "line": 15,
                    "character": 24
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of \"button_labels\" is partially unknown\n  Type of \"button_labels\" is \"set[Unknown]\"",
            "range": {
                "start": {
                    "line": 22,
                    "character": 4
                },
                "end": {
                    "line": 22,
                    "character": 17
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of \"add\" is partially unknown\n  Type of \"add\" is \"(element: Unknown, /) -> None\"",
            "range": {
                "start": {
                    "line": 25,
                    "character": 12
                },
                "end": {
                    "line": 25,
                    "character": 29
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[str, list[Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 35,
                    "character": 12
                },
                "end": {
                    "line": 35,
                    "character": 27
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of parameter \"ops\" is unknown",
            "range": {
                "start": {
                    "line": 35,
                    "character": 34
                },
                "end": {
                    "line": 35,
                    "character": 37
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"ops\"",
            "range": {
                "start": {
                    "line": 35,
                    "character": 34
                },
                "end": {
                    "line": 35,
                    "character": 37
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[str, list[Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 37,
                    "character": 19
                },
                "end": {
                    "line": 37,
                    "character": 34
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[Unknown, Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 39,
                    "character": 12
                },
                "end": {
                    "line": 39,
                    "character": 27
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of parameter \"doc_id\" is unknown",
            "range": {
                "start": {
                    "line": 39,
                    "character": 34
                },
                "end": {
                    "line": 39,
                    "character": 40
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"doc_id\"",
            "range": {
                "start": {
                    "line": 39,
                    "character": 34
                },
                "end": {
                    "line": 39,
                    "character": 40
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of parameter \"content\" is unknown",
            "range": {
                "start": {
                    "line": 39,
                    "character": 42
                },
                "end": {
                    "line": 39,
                    "character": 49
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"content\"",
            "range": {
                "start": {
                    "line": 39,
                    "character": 42
                },
                "end": {
                    "line": 39,
                    "character": 49
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of parameter \"metadata\" is partially unknown\n  Parameter type is \"Unknown | None\"",
            "range": {
                "start": {
                    "line": 39,
                    "character": 51
                },
                "end": {
                    "line": 39,
                    "character": 59
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"metadata\"",
            "range": {
                "start": {
                    "line": 39,
                    "character": 51
                },
                "end": {
                    "line": 39,
                    "character": 59
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[Unknown, Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 41,
                    "character": 19
                },
                "end": {
                    "line": 41,
                    "character": 21
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[Unknown, Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 43,
                    "character": 12
                },
                "end": {
                    "line": 43,
                    "character": 27
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of parameter \"doc_id\" is unknown",
            "range": {
                "start": {
                    "line": 43,
                    "character": 34
                },
                "end": {
                    "line": 43,
                    "character": 40
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"doc_id\"",
            "range": {
                "start": {
                    "line": 43,
                    "character": 34
                },
                "end": {
                    "line": 43,
                    "character": 40
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[Unknown, Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 45,
                    "character": 19
                },
                "end": {
                    "line": 45,
                    "character": 21
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[Unknown, Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 47,
                    "character": 12
                },
                "end": {
                    "line": 47,
                    "character": 30
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[Unknown, Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 49,
                    "character": 19
                },
                "end": {
                    "line": 49,
                    "character": 21
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of parameter \"path\" is unknown",
            "range": {
                "start": {
                    "line": 55,
                    "character": 33
                },
                "end": {
                    "line": 55,
                    "character": 37
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"path\"",
            "range": {
                "start": {
                    "line": 55,
                    "character": 33
                },
                "end": {
                    "line": 55,
                    "character": 37
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[Unknown, Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 59,
                    "character": 12
                },
                "end": {
                    "line": 59,
                    "character": 18
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of parameter \"files\" is unknown",
            "range": {
                "start": {
                    "line": 59,
                    "character": 25
                },
                "end": {
                    "line": 59,
                    "character": 30
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"files\"",
            "range": {
                "start": {
                    "line": 59,
                    "character": 25
                },
                "end": {
                    "line": 59,
                    "character": 30
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of parameter \"progress\" is partially unknown\n  Parameter type is \"Unknown | None\"",
            "range": {
                "start": {
                    "line": 59,
                    "character": 32
                },
                "end": {
                    "line": 59,
                    "character": 40
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"progress\"",
            "range": {
                "start": {
                    "line": 59,
                    "character": 32
                },
                "end": {
                    "line": 59,
                    "character": 40
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"iterable\" in function \"__init__\"",
            "range": {
                "start": {
                    "line": 60,
                    "character": 35
                },
                "end": {
                    "line": 60,
                    "character": 40
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[Unknown, Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 63,
                    "character": 19
                },
                "end": {
                    "line": 63,
                    "character": 21
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[str, list[Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 65,
                    "character": 12
                },
                "end": {
                    "line": 65,
                    "character": 27
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of parameter \"ops\" is unknown",
            "range": {
                "start": {
                    "line": 65,
                    "character": 34
                },
                "end": {
                    "line": 65,
                    "character": 37
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"ops\"",
            "range": {
                "start": {
                    "line": 65,
                    "character": 34
                },
                "end": {
                    "line": 65,
                    "character": 37
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of \"bulk_operations\" is partially unknown\n  Type of \"bulk_operations\" is \"(ops: Unknown) -> dict[str, list[Unknown]]\"",
            "range": {
                "start": {
                    "line": 66,
                    "character": 19
                },
                "end": {
                    "line": 66,
                    "character": 56
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[str, list[Unknown]]\", is partially unknown",
            "range": {
                "start": {
                    "line": 66,
                    "character": 19
                },
                "end": {
                    "line": 66,
                    "character": 61
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"ops\" in function \"bulk_operations\"",
            "range": {
                "start": {
                    "line": 66,
                    "character": 57
                },
                "end": {
                    "line": 66,
                    "character": 60
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[Unknown, Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 68,
                    "character": 12
                },
                "end": {
                    "line": 68,
                    "character": 27
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of parameter \"doc_id\" is unknown",
            "range": {
                "start": {
                    "line": 68,
                    "character": 34
                },
                "end": {
                    "line": 68,
                    "character": 40
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"doc_id\"",
            "range": {
                "start": {
                    "line": 68,
                    "character": 34
                },
                "end": {
                    "line": 68,
                    "character": 40
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of parameter \"content\" is unknown",
            "range": {
                "start": {
                    "line": 68,
                    "character": 42
                },
                "end": {
                    "line": 68,
                    "character": 49
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"content\"",
            "range": {
                "start": {
                    "line": 68,
                    "character": 42
                },
                "end": {
                    "line": 68,
                    "character": 49
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of parameter \"metadata\" is partially unknown\n  Parameter type is \"Unknown | None\"",
            "range": {
                "start": {
                    "line": 68,
                    "character": 51
                },
                "end": {
                    "line": 68,
                    "character": 59
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"metadata\"",
            "range": {
                "start": {
                    "line": 68,
                    "character": 51
                },
                "end": {
                    "line": 68,
                    "character": 59
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of \"update_document\" is partially unknown\n  Type of \"update_document\" is \"(doc_id: Unknown, content: Unknown, metadata: Unknown | None = None) -> dict[Unknown, Unknown]\"",
            "range": {
                "start": {
                    "line": 69,
                    "character": 19
                },
                "end": {
                    "line": 69,
                    "character": 56
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[Unknown, Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 69,
                    "character": 19
                },
                "end": {
                    "line": 73,
                    "character": 13
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"doc_id\" in function \"update_document\"",
            "range": {
                "start": {
                    "line": 70,
                    "character": 16
                },
                "end": {
                    "line": 70,
                    "character": 22
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"content\" in function \"update_document\"",
            "range": {
                "start": {
                    "line": 71,
                    "character": 16
                },
                "end": {
                    "line": 71,
                    "character": 23
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[Unknown, Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 75,
                    "character": 12
                },
                "end": {
                    "line": 75,
                    "character": 27
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of parameter \"doc_id\" is unknown",
            "range": {
                "start": {
                    "line": 75,
                    "character": 34
                },
                "end": {
                    "line": 75,
                    "character": 40
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"doc_id\"",
            "range": {
                "start": {
                    "line": 75,
                    "character": 34
                },
                "end": {
                    "line": 75,
                    "character": 40
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of \"delete_document\" is partially unknown\n  Type of \"delete_document\" is \"(doc_id: Unknown) -> dict[Unknown, Unknown]\"",
            "range": {
                "start": {
                    "line": 76,
                    "character": 19
                },
                "end": {
                    "line": 76,
                    "character": 56
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[Unknown, Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 76,
                    "character": 19
                },
                "end": {
                    "line": 76,
                    "character": 64
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Argument type is unknown\n  Argument corresponds to parameter \"doc_id\" in function \"delete_document\"",
            "range": {
                "start": {
                    "line": 76,
                    "character": 57
                },
                "end": {
                    "line": 76,
                    "character": 63
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[Unknown, Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 78,
                    "character": 12
                },
                "end": {
                    "line": 78,
                    "character": 30
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Return type, \"dict[Unknown, Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 79,
                    "character": 19
                },
                "end": {
                    "line": 79,
                    "character": 61
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of \"ingest\" is partially unknown\n  Type of \"ingest\" is \"(files: Unknown, progress: Unknown | None = None) -> dict[Unknown, Unknown]\"",
            "range": {
                "start": {
                    "line": 85,
                    "character": 4
                },
                "end": {
                    "line": 85,
                    "character": 16
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of parameter \"p\" is unknown",
            "range": {
                "start": {
                    "line": 85,
                    "character": 44
                },
                "end": {
                    "line": 85,
                    "character": 45
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of parameter \"m\" is unknown",
            "range": {
                "start": {
                    "line": 85,
                    "character": 47
                },
                "end": {
                    "line": 85,
                    "character": 48
                }
            },
            "rule": "reportUnknownLambdaType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of \"append\" is partially unknown\n  Type of \"append\" is \"(object: Unknown, /) -> None\"",
            "range": {
                "start": {
                    "line": 85,
                    "character": 50
                },
                "end": {
                    "line": 85,
                    "character": 65
                }
            },
            "rule": "reportUnknownMemberType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "\"_queue_files\" is private and used outside of the module in which it is declared",
            "range": {
                "start": {
                    "line": 91,
                    "character": 39
                },
                "end": {
                    "line": 91,
                    "character": 51
                }
            },
            "rule": "reportPrivateUsage"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Argument of type \"list[DummyFile]\" cannot be assigned to parameter \"files\" of type \"list[File]\" in function \"_queue_files\"\n  \"DummyFile\" is not assignable to \"File\"",
            "range": {
                "start": {
                    "line": 92,
                    "character": 9
                },
                "end": {
                    "line": 92,
                    "character": 34
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "\"_process_all\" is private and used outside of the module in which it is declared",
            "range": {
                "start": {
                    "line": 96,
                    "character": 18
                },
                "end": {
                    "line": 96,
                    "character": 30
                }
            },
            "rule": "reportPrivateUsage"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "\"_update_document\" is private and used outside of the module in which it is declared",
            "range": {
                "start": {
                    "line": 99,
                    "character": 18
                },
                "end": {
                    "line": 99,
                    "character": 34
                }
            },
            "rule": "reportPrivateUsage"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "\"_delete_document\" is private and used outside of the module in which it is declared",
            "range": {
                "start": {
                    "line": 100,
                    "character": 18
                },
                "end": {
                    "line": 100,
                    "character": 34
                }
            },
            "rule": "reportPrivateUsage"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type of parameter \"_path\" is unknown",
            "range": {
                "start": {
                    "line": 108,
                    "character": 33
                },
                "end": {
                    "line": 108,
                    "character": 38
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"_path\"",
            "range": {
                "start": {
                    "line": 108,
                    "character": 33
                },
                "end": {
                    "line": 108,
                    "character": 38
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "\"_queue_files\" is private and used outside of the module in which it is declared",
            "range": {
                "start": {
                    "line": 115,
                    "character": 36
                },
                "end": {
                    "line": 115,
                    "character": 48
                }
            },
            "rule": "reportPrivateUsage"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest.py",
            "severity": "error",
            "message": "Argument of type \"list[DummyFile]\" cannot be assigned to parameter \"files\" of type \"list[File]\" in function \"_queue_files\"\n  \"DummyFile\" is not assignable to \"File\"",
            "range": {
                "start": {
                    "line": 116,
                    "character": 9
                },
                "end": {
                    "line": 116,
                    "character": 34
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest_queue.py",
            "severity": "error",
            "message": "\"_queue_files\" is private and used outside of the module in which it is declared",
            "range": {
                "start": {
                    "line": 8,
                    "character": 26
                },
                "end": {
                    "line": 8,
                    "character": 38
                }
            },
            "rule": "reportPrivateUsage"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest_queue.py",
            "severity": "error",
            "message": "\"_process_all\" is private and used outside of the module in which it is declared",
            "range": {
                "start": {
                    "line": 8,
                    "character": 40
                },
                "end": {
                    "line": 8,
                    "character": 52
                }
            },
            "rule": "reportPrivateUsage"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest_queue.py",
            "severity": "error",
            "message": "\"_document_service\" is private and used outside of the module in which it is declared",
            "range": {
                "start": {
                    "line": 8,
                    "character": 54
                },
                "end": {
                    "line": 8,
                    "character": 71
                }
            },
            "rule": "reportPrivateUsage"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest_queue.py",
            "severity": "error",
            "message": "Argument of type \"list[DummyFile]\" cannot be assigned to parameter \"files\" of type \"list[File]\" in function \"_queue_files\"\n  \"DummyFile\" is not assignable to \"File\"",
            "range": {
                "start": {
                    "line": 20,
                    "character": 39
                },
                "end": {
                    "line": 20,
                    "character": 64
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest_queue.py",
            "severity": "error",
            "message": "Type of parameter \"operations\" is unknown",
            "range": {
                "start": {
                    "line": 25,
                    "character": 22
                },
                "end": {
                    "line": 25,
                    "character": 32
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest_queue.py",
            "severity": "error",
            "message": "Type annotation is missing for parameter \"operations\"",
            "range": {
                "start": {
                    "line": 25,
                    "character": 22
                },
                "end": {
                    "line": 25,
                    "character": 32
                }
            },
            "rule": "reportMissingParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ingest_queue.py",
            "severity": "error",
            "message": "Argument type is partially unknown\n  Argument corresponds to parameter \"value\" in function \"setattr\"\n  Argument type is \"(operations: Unknown) -> dict[str, list[dict[str, str | dict[str, str]]]]\"",
            "range": {
                "start": {
                    "line": 36,
                    "character": 62
                },
                "end": {
                    "line": 36,
                    "character": 75
                }
            },
            "rule": "reportUnknownArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_performance_indicator.py",
            "severity": "error",
            "message": "Import \"pytest\" is not accessed",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 13
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_ranking_controls.py",
            "severity": "error",
            "message": "Import \"pytest\" is not accessed",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 13
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_settings_performance.py",
            "severity": "error",
            "message": "Import \"pytest\" is not accessed",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 13
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_settings_performance.py",
            "severity": "error",
            "message": "Import \"gr\" is not accessed",
            "range": {
                "start": {
                    "line": 3,
                    "character": 17
                },
                "end": {
                    "line": 3,
                    "character": 19
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_transparency.py",
            "severity": "error",
            "message": "Import \"pytest\" is not accessed",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 13
                }
            },
            "rule": "reportUnusedImport"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_transparency.py",
            "severity": "error",
            "message": "Argument of type \"Literal['Doc1']\" cannot be assigned to parameter \"target\" of type \"Block | None\" in function \"__init__\"\n  Type \"Literal['Doc1']\" is not assignable to type \"Block | None\"\n    \"Literal['Doc1']\" is not assignable to \"Block\"\n    \"Literal['Doc1']\" is not assignable to \"None\"",
            "range": {
                "start": {
                    "line": 17,
                    "character": 37
                },
                "end": {
                    "line": 17,
                    "character": 43
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_transparency.py",
            "severity": "error",
            "message": "Argument of type \"Literal['rank']\" cannot be assigned to parameter \"key\" of type \"SupportsIndex | slice[Any, Any, Any]\" in function \"__getitem__\"\n  Type \"Literal['rank']\" is not assignable to type \"SupportsIndex | slice[Any, Any, Any]\"\n    \"Literal['rank']\" is incompatible with protocol \"SupportsIndex\"\n      \"__index__\" is not present\n    \"Literal['rank']\" is not assignable to \"slice[Any, Any, Any]\"",
            "range": {
                "start": {
                    "line": 48,
                    "character": 11
                },
                "end": {
                    "line": 48,
                    "character": 41
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_ui/test_transparency.py",
            "severity": "error",
            "message": "Argument of type \"Literal['score']\" cannot be assigned to parameter \"key\" of type \"SupportsIndex | slice[Any, Any, Any]\" in function \"__getitem__\"\n  Type \"Literal['score']\" is not assignable to type \"SupportsIndex | slice[Any, Any, Any]\"\n    \"Literal['score']\" is incompatible with protocol \"SupportsIndex\"\n      \"__index__\" is not present\n    \"Literal['score']\" is not assignable to \"slice[Any, Any, Any]\"",
            "range": {
                "start": {
                    "line": 49,
                    "character": 11
                },
                "end": {
                    "line": 49,
                    "character": 42
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_utils/test_timezone_handling.py",
            "severity": "error",
            "message": "Type of \"backup_config\" is partially unknown\n  Type of \"backup_config\" is \"(path: str, backup_dir: str) -> Tuple[Path, dict[Unknown, Unknown]]\"",
            "range": {
                "start": {
                    "line": 9,
                    "character": 30
                },
                "end": {
                    "line": 9,
                    "character": 43
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_utils/test_timezone_handling.py",
            "severity": "error",
            "message": "Return type, \"dict[Unknown, Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 15,
                    "character": 8
                },
                "end": {
                    "line": 15,
                    "character": 23
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_utils/test_timezone_handling.py",
            "severity": "error",
            "message": "Type of parameter \"metadata\" is partially unknown\n  Parameter type is \"dict[Unknown, Unknown] | None\"",
            "range": {
                "start": {
                    "line": 16,
                    "character": 41
                },
                "end": {
                    "line": 16,
                    "character": 49
                }
            },
            "rule": "reportUnknownParameterType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_utils/test_timezone_handling.py",
            "severity": "error",
            "message": "Expected type arguments for generic class \"dict\"",
            "range": {
                "start": {
                    "line": 16,
                    "character": 51
                },
                "end": {
                    "line": 16,
                    "character": 55
                }
            },
            "rule": "reportMissingTypeArgument"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_utils/test_timezone_handling.py",
            "severity": "error",
            "message": "Expected type arguments for generic class \"dict\"",
            "range": {
                "start": {
                    "line": 17,
                    "character": 9
                },
                "end": {
                    "line": 17,
                    "character": 13
                }
            },
            "rule": "reportMissingTypeArgument"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_utils/test_timezone_handling.py",
            "severity": "error",
            "message": "Return type, \"dict[Unknown, Unknown]\", is partially unknown",
            "range": {
                "start": {
                    "line": 18,
                    "character": 15
                },
                "end": {
                    "line": 18,
                    "character": 34
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_utils/test_timezone_handling.py",
            "severity": "error",
            "message": "Type of \"_\" is partially unknown\n  Type of \"_\" is \"dict[Unknown, Unknown]\"",
            "range": {
                "start": {
                    "line": 47,
                    "character": 17
                },
                "end": {
                    "line": 47,
                    "character": 18
                }
            },
            "rule": "reportUnknownVariableType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_utils/test_timezone_handling.py",
            "severity": "error",
            "message": "Argument of type \"DummyDense\" cannot be assigned to parameter \"dense\" of type \"DenseRetriever\" in function \"__init__\"\n  \"DummyDense\" is not assignable to \"DenseRetriever\"",
            "range": {
                "start": {
                    "line": 53,
                    "character": 26
                },
                "end": {
                    "line": 53,
                    "character": 38
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/workspace/personal-rag-copilot/tests/test_utils/test_timezone_handling.py",
            "severity": "error",
            "message": "Argument of type \"DummyLexical\" cannot be assigned to parameter \"lexical\" of type \"LexicalBM25\" in function \"__init__\"\n  \"DummyLexical\" is not assignable to \"LexicalBM25\"",
            "range": {
                "start": {
                    "line": 53,
                    "character": 40
                },
                "end": {
                    "line": 53,
                    "character": 54
                }
            },
            "rule": "reportArgumentType"
        }
    ],
    "summary": {
        "filesAnalyzed": 78,
        "errorCount": 733,
        "warningCount": 1,
        "informationCount": 0,
        "timeInSec": 25.828
    }
}

