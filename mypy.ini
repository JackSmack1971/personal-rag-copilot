# mypy configuration for personal-rag-copilot
# Optimized for AI/ML project with optional dependencies and gradual typing adoption

[mypy]
# Python version and platform
python_version = 3.9
platform = linux

# Import discovery
mypy_path = src
packages = src
exclude = ^(build|dist|\..*|__pycache__|\.mypy_cache|node_modules|venv|env)/.*$

# Core strictness - balanced approach for ML codebase
strict = False
warn_unused_configs = True
warn_redundant_casts = True
warn_unused_ignores = True

# Type checking behavior
check_untyped_defs = True
disallow_untyped_calls = False
disallow_untyped_defs = False
disallow_incomplete_defs = True
disallow_untyped_decorators = False

# Dynamic typing controls
disallow_any_explicit = False
disallow_any_generics = True
disallow_subclassing_any = True
warn_return_any = False

# None and Optional handling
strict_optional = True
implicit_optional = False

# Error reporting
show_error_codes = True
show_column_numbers = True
show_error_context = True
pretty = True
color_output = True
error_summary = True

# Advanced features
allow_redefinition = True
local_partial_types = True
no_implicit_reexport = True
strict_equality = True

# Performance and caching
incremental = True
cache_dir = .mypy_cache
skip_cache_mtime_checks = False

# Third-party library stubs
ignore_missing_imports = False

# =============================================================================
# Per-module configuration for dependencies and specific patterns
# =============================================================================

# Optional AI/ML dependencies - ignore missing imports
[mypy-nltk.*]
ignore_missing_imports = True

[mypy-pinecone.*]
ignore_missing_imports = True

[mypy-sentence_transformers.*]
ignore_missing_imports = True

[mypy-transformers.*]
ignore_missing_imports = True

[mypy-torch.*]
ignore_missing_imports = True

[mypy-ragas.*]
ignore_missing_imports = True

[mypy-rank_bm25.*]
ignore_missing_imports = True

# Document processing libraries
[mypy-pypdf.*]
ignore_missing_imports = True

[mypy-docx.*]
ignore_missing_imports = True

[mypy-bs4.*]
ignore_missing_imports = True

[mypy-markdown.*]
ignore_missing_imports = True

[mypy-fpdf.*]
ignore_missing_imports = True

# Web framework and UI
[mypy-gradio.*]
ignore_missing_imports = True

[mypy-uvicorn.*]
ignore_missing_imports = True

# Data processing
[mypy-pandas.*]
ignore_missing_imports = True

[mypy-plotly.*]
ignore_missing_imports = True

[mypy-huggingface_hub.*]
ignore_missing_imports = True

# =============================================================================
# Project-specific module configuration
# =============================================================================

# Core source modules - enforce higher standards
[mypy-src.config.*]
disallow_untyped_defs = True
disallow_incomplete_defs = True
warn_return_any = True

[mypy-src.ranking.*]
disallow_untyped_defs = True
disallow_incomplete_defs = True
warn_return_any = True

[mypy-src.retrieval.*]
disallow_untyped_defs = True
disallow_incomplete_defs = True

[mypy-src.services.*]
disallow_untyped_defs = True
disallow_incomplete_defs = True

# Integration modules - more lenient due to external dependencies
[mypy-src.integrations.*]
disallow_untyped_calls = False
warn_return_any = False

# UI modules - lenient due to Gradio typing limitations
[mypy-src.ui.*]
disallow_untyped_calls = False
disallow_any_generics = False

# Evaluation modules - handle Ragas typing issues
[mypy-src.evaluation.*]
disallow_untyped_calls = False
warn_return_any = False

# Test modules - more permissive for test code
[mypy-tests.*]
disallow_untyped_defs = False
disallow_incomplete_defs = False
disallow_untyped_calls = False
disallow_any_generics = False
warn_return_any = False

# Test fixtures and utilities
[mypy-tests.conftest]
ignore_errors = True

[mypy-tests.*.conftest]
ignore_errors = True

# Entry point
[mypy-app]
disallow_untyped_defs = True
disallow_incomplete_defs = True

# =============================================================================
# Specific third-party library configurations
# =============================================================================

# FastAPI - generally well-typed but some edge cases
[mypy-fastapi.*]
warn_return_any = False

# Pytest - testing framework
[mypy-pytest.*]
ignore_missing_imports = True

[mypy-pytest_asyncio.*]
ignore_missing_imports = True

[mypy-pytest_benchmark.*]
ignore_missing_imports = True

[mypy-pytest_cov.*]
ignore_missing_imports = True

# Pydantic - well typed but can have complex generics
[mypy-pydantic.*]
warn_return_any = False

# Development and debugging tools
[mypy-structlog.*]
ignore_missing_imports = True
